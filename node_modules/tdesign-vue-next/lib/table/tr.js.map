{"version":3,"file":"tr.js","sources":["../../src/table/tr.tsx"],"sourcesContent":["import {\n  defineComponent,\n  PropType,\n  SetupContext,\n  h,\n  computed,\n  ref,\n  reactive,\n  onMounted,\n  onBeforeUnmount,\n  toRefs,\n} from 'vue';\nimport isFunction from 'lodash/isFunction';\nimport upperFirst from 'lodash/upperFirst';\nimport isString from 'lodash/isString';\nimport pick from 'lodash/pick';\nimport get from 'lodash/get';\nimport { formatClassNames, formatRowAttributes, formatRowClassNames } from './utils';\nimport { getRowFixedStyles, getColumnFixedStyles } from './hooks/useFixed';\nimport useClassName from './hooks/useClassName';\nimport TEllipsis from './ellipsis';\nimport { BaseTableCellParams, TableRowData, RowspanColspan, TdPrimaryTableProps, TdBaseTableProps } from './type';\nimport baseTableProps from './base-table-props';\nimport useLazyLoad from './hooks/useLazyLoad';\nimport { RowAndColFixedPosition } from './interface';\nimport { getCellKey, SkipSpansValue } from './hooks/useRowspanAndColspan';\n\nexport interface RenderTdExtra {\n  rowAndColFixedPosition: RowAndColFixedPosition;\n  columnLength: number;\n  dataLength: number;\n  cellSpans: RowspanColspan;\n  cellEmptyContent: TdBaseTableProps['cellEmptyContent'];\n}\n\nexport interface RenderEllipsisCellParams {\n  cellNode: any;\n}\n\nexport type TrCommonProps = Pick<TdPrimaryTableProps, TrPropsKeys>;\n\nexport const TABLE_PROPS = [\n  'rowKey',\n  'rowClassName',\n  'columns',\n  'fixedRows',\n  'footData',\n  'rowAttributes',\n  'rowspanAndColspan',\n  'scroll',\n  'cellEmptyContent',\n  'onCellClick',\n  'onRowClick',\n  'onRowDblclick',\n  'onRowMouseover',\n  'onRowMousedown',\n  'onRowMouseenter',\n  'onRowMouseleave',\n  'onRowMouseup',\n] as const;\n\nexport type TrPropsKeys = typeof TABLE_PROPS[number];\n\nexport interface TrProps extends TrCommonProps {\n  rowKey: string;\n  row: TableRowData;\n  rowIndex: number;\n  ellipsisOverlayClassName: string;\n  classPrefix: string;\n  dataLength: number;\n  rowAndColFixedPosition?: RowAndColFixedPosition;\n  skipSpansMap?: Map<string, SkipSpansValue>;\n  scrollType?: string;\n  isVirtual?: boolean;\n  rowHeight?: number;\n  trs?: Map<number, object>;\n  bufferSize?: number;\n  tableElm?: any;\n  // HTMLDivElement\n  tableContentElm?: any;\n  cellEmptyContent: TdBaseTableProps['cellEmptyContent'];\n}\n\nexport const ROW_LISTENERS = ['click', 'dblclick', 'mouseover', 'mousedown', 'mouseenter', 'mouseleave', 'mouseup'];\n\nexport function renderCell(\n  params: BaseTableCellParams<TableRowData>,\n  slots: SetupContext['slots'],\n  extra?: {\n    cellEmptyContent?: TdBaseTableProps['cellEmptyContent'];\n  },\n) {\n  const { col, row, rowIndex } = params;\n  // support serial number column\n  if (col.colKey === 'serial-number') {\n    return rowIndex + 1;\n  }\n  if (isFunction(col.cell)) {\n    return col.cell(h, params);\n  }\n  if (slots[col.colKey]) {\n    return slots[col.colKey](params);\n  }\n  if (isString(col.cell) && slots[col.cell]) {\n    return slots[col.cell](params);\n  }\n  if (isFunction(col.render)) {\n    return col.render(h, { ...params, type: 'cell' });\n  }\n  const r = get(row, col.colKey);\n  // 0 和 false 属于正常可用之，不能使用兜底逻辑 cellEmptyContent\n  if (![undefined, '', null].includes(r)) return r;\n  // cellEmptyContent 作为空数据兜底显示，用户可自定义\n  if (extra?.cellEmptyContent) {\n    return isFunction(extra.cellEmptyContent) ? extra.cellEmptyContent(h, params) : extra.cellEmptyContent;\n  }\n  if (slots.cellEmptyContent) return slots.cellEmptyContent(params);\n  return r;\n}\n\n// 表格行组件\nexport default defineComponent({\n  name: 'TR',\n\n  props: {\n    row: Object as PropType<TableRowData>,\n    rowIndex: Number,\n    dataLength: Number,\n    ellipsisOverlayClassName: String,\n    classPrefix: String,\n    rowAndColFixedPosition: Map as PropType<RowAndColFixedPosition>,\n    // 合并单元格，是否跳过渲染\n    skipSpansMap: Map as PropType<TrProps['skipSpansMap']>,\n    ...pick(baseTableProps, TABLE_PROPS),\n    scrollType: String,\n    rowHeight: Number,\n    trs: Map as PropType<TrProps['trs']>,\n    bufferSize: Number,\n    isVirtual: Boolean,\n    // eslint-disable-next-line\n    tableElm: {},\n    // eslint-disable-next-line\n    tableContentElm: {},\n  },\n\n  emits: ['row-mounted'],\n\n  setup(props: TrProps, context: SetupContext) {\n    const { tableContentElm } = toRefs(props);\n    const trRef = ref(null);\n    const {\n      tdEllipsisClass,\n      tableBaseClass,\n      tableColFixedClasses,\n      tableRowFixedClasses,\n      tdAlignClasses,\n      tableDraggableClasses,\n    } = useClassName();\n    const trStyles = computed(() =>\n      getRowFixedStyles(\n        get(props.row, props.rowKey || 'id'),\n        props.rowIndex,\n        props.dataLength,\n        props.fixedRows,\n        props.rowAndColFixedPosition,\n        tableRowFixedClasses,\n      ),\n    );\n\n    const trAttributes = computed(\n      () => formatRowAttributes(props.rowAttributes, { row: props.row, rowIndex: props.rowIndex, type: 'body' }) || {},\n    );\n\n    const classes = computed(() => {\n      const customClasses = formatRowClassNames(\n        props.rowClassName,\n        { row: props.row, rowIndex: props.rowIndex, type: 'body' },\n        props.rowKey || 'id',\n      );\n      return [trStyles.value?.classes, customClasses].filter((v) => v);\n    });\n\n    const { hasLazyLoadHolder, tRowHeight } = useLazyLoad(\n      tableContentElm,\n      trRef,\n      reactive({ ...props.scroll, rowIndex: props.rowIndex }),\n    );\n\n    const getTrListeners = (row: TableRowData, rowIndex: number) => {\n      const trListeners: { [eventName: string]: (e: MouseEvent) => void } = {};\n      // add events to row\n      ROW_LISTENERS.forEach((eventName) => {\n        trListeners[`on${upperFirst(eventName)}`] = (e: MouseEvent) => {\n          const p = { e, row, index: rowIndex };\n          props[`onRow${upperFirst(eventName)}`]?.(p);\n        };\n      });\n      return trListeners;\n    };\n\n    onMounted(() => {\n      const { scrollType, isVirtual, row: rowData, trs } = props;\n      if (scrollType === 'virtual') {\n        if (isVirtual) {\n          const { $index } = rowData;\n          trs.set($index, trRef.value);\n          context.emit('row-mounted');\n        }\n      }\n    });\n\n    onBeforeUnmount(() => {\n      if (props.isVirtual) {\n        const { trs, row } = props;\n        const { $index } = row;\n        trs.delete($index);\n      }\n    });\n\n    return {\n      trRef,\n      tableColFixedClasses,\n      tSlots: context.slots,\n      tdEllipsisClass,\n      tableBaseClass,\n      tdAlignClasses,\n      tableDraggableClasses,\n      trStyles,\n      classes,\n      trAttributes,\n      tRowHeight,\n      hasLazyLoadHolder,\n      getTrListeners,\n    };\n  },\n\n  methods: {\n    renderEllipsisCell(cellParams: BaseTableCellParams<TableRowData>, params: RenderEllipsisCellParams) {\n      const { cellNode } = params;\n      const { col } = cellParams;\n      let content = isFunction(col.ellipsis) ? col.ellipsis(h, cellParams) : undefined;\n      if (typeof col.ellipsis === 'object' && isFunction(col.ellipsis.content)) {\n        content = col.ellipsis.content(h, cellParams);\n      }\n      let tooltipProps = {};\n      if (typeof col.ellipsis === 'object') {\n        tooltipProps = 'props' in col.ellipsis ? col.ellipsis.props : col.ellipsis || undefined;\n      }\n      const tableElement = this.tableElm as HTMLDivElement;\n      return (\n        <TEllipsis\n          placement={'top'}\n          attach={tableElement ? () => tableElement : undefined}\n          tooltipContent={content && (() => content)}\n          tooltipProps={tooltipProps}\n          overlayClassName={this.ellipsisOverlayClassName}\n          classPrefix={this.classPrefix}\n        >\n          {cellNode}\n        </TEllipsis>\n      );\n    },\n\n    renderTd(params: BaseTableCellParams<TableRowData>, extra: RenderTdExtra) {\n      const { col, colIndex, rowIndex } = params;\n      const { cellSpans, dataLength, rowAndColFixedPosition } = extra;\n      const cellNode = renderCell(params, this.tSlots, { cellEmptyContent: extra.cellEmptyContent });\n      const tdStyles = getColumnFixedStyles(col, colIndex, rowAndColFixedPosition, this.tableColFixedClasses);\n      const customClasses = formatClassNames(col.className, { ...params, type: 'td' });\n      const classes = [\n        tdStyles.classes,\n        customClasses,\n        {\n          [this.tdEllipsisClass]: col.ellipsis,\n          [this.tableBaseClass.tdLastRow]: rowIndex + cellSpans.rowspan === dataLength,\n          [this.tableBaseClass.tdFirstCol]: colIndex === 0 && this.rowspanAndColspan,\n          [this.tdAlignClasses[col.align]]: col.align && col.align !== 'left',\n          // 标记可拖拽列\n          [this.tableDraggableClasses.handle]: col.colKey === 'drag',\n        },\n      ];\n      const onClick = (e: MouseEvent) => {\n        const p = { ...params, e };\n        this.onCellClick?.(p);\n      };\n      const normalAttrs = isFunction(col.attrs) ? col.attrs({ ...params, type: 'td' }) : col.attrs;\n      const attrs = { ...normalAttrs, ...cellSpans };\n      return (\n        <td key={col.colKey || colIndex} class={classes} style={tdStyles.style} {...attrs} onClick={onClick}>\n          {col.ellipsis ? this.renderEllipsisCell(params, { cellNode }) : cellNode}\n        </td>\n      );\n    },\n  },\n\n  render() {\n    const { row, rowIndex, dataLength, rowAndColFixedPosition } = this;\n    const columVNodeList = this.columns?.map((col, colIndex) => {\n      const cellSpans: RowspanColspan = {};\n      const params = {\n        row,\n        col,\n        rowIndex,\n        colIndex,\n      };\n      let spanState = null;\n      if (this.skipSpansMap.size) {\n        const cellKey = getCellKey(row, this.rowKey, col.colKey, colIndex);\n        spanState = this.skipSpansMap.get(cellKey) || {};\n        spanState?.rowspan > 1 && (cellSpans.rowspan = spanState.rowspan);\n        spanState?.colspan > 1 && (cellSpans.colspan = spanState.colspan);\n        if (spanState.skipped) return null;\n      }\n      return this.renderTd(params, {\n        dataLength,\n        rowAndColFixedPosition,\n        columnLength: this.columns.length,\n        cellSpans,\n        cellEmptyContent: this.cellEmptyContent,\n      });\n    });\n    return (\n      <tr\n        ref=\"trRef\"\n        {...this.trAttributes}\n        style={this.trStyles?.style}\n        class={this.classes}\n        {...this.getTrListeners(row, rowIndex)}\n      >\n        {this.hasLazyLoadHolder ? [<td style={{ height: `${this.tRowHeight}px`, border: 'none' }} />] : columVNodeList}\n      </tr>\n    );\n  },\n});\n"],"names":["_isVNode","TABLE_PROPS","ROW_LISTENERS","renderCell","params","slots","extra","col","row","rowIndex","colKey","isFunction","cell","h","isString","render","type","r","get","includes","cellEmptyContent","defineComponent","name","props","Object","Number","dataLength","ellipsisOverlayClassName","String","classPrefix","rowAndColFixedPosition","Map","skipSpansMap","pick","baseTableProps","scrollType","rowHeight","trs","bufferSize","isVirtual","Boolean","tableElm","tableContentElm","emits","setup","context","toRefs","trRef","ref","useClassName","tdEllipsisClass","tableBaseClass","tableColFixedClasses","tableRowFixedClasses","tdAlignClasses","tableDraggableClasses","trStyles","computed","getRowFixedStyles","rowKey","fixedRows","trAttributes","formatRowAttributes","rowAttributes","classes","customClasses","formatRowClassNames","rowClassName","value","filter","v","useLazyLoad","reactive","scroll","hasLazyLoadHolder","tRowHeight","getTrListeners","trListeners","forEach","eventName","upperFirst","e","p","index","onMounted","rowData","$index","set","emit","onBeforeUnmount","tSlots","methods","renderEllipsisCell","cellParams","cellNode","content","ellipsis","tooltipProps","tableElement","_createVNode","renderTd","colIndex","cellSpans","tdStyles","getColumnFixedStyles","formatClassNames","className","tdLastRow","rowspan","tdFirstCol","rowspanAndColspan","align","handle","onClick","onCellClick","normalAttrs","attrs","_mergeProps","style","columVNodeList","columns","map","spanState","size","cellKey","getCellKey","colspan","skipped","columnLength","length","height","border"],"mappings":"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"}