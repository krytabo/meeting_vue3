{"version":3,"file":"select.js","sources":["../../src/select/select.tsx"],"sourcesContent":["import { defineComponent, provide, computed, toRefs, watch, ref, nextTick } from 'vue';\nimport picker from 'lodash/pick';\nimport isArray from 'lodash/isArray';\nimport isFunction from 'lodash/isFunction';\nimport debounce from 'lodash/debounce';\nimport cloneDeep from 'lodash/cloneDeep';\nimport get from 'lodash/get';\nimport intersection from 'lodash/intersection';\n\nimport FakeArrow from '../common-components/fake-arrow';\nimport SelectInput from '../select-input';\nimport SelectPanel from './select-panel';\n\nimport props from './props';\nimport { TdSelectProps, SelectValue } from './type';\nimport { PopupVisibleChangeContext } from '../popup';\n\n// hooks\nimport { useFormDisabled } from '../form/hooks';\nimport useDefaultValue from '../hooks/useDefaultValue';\nimport useVModel from '../hooks/useVModel';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport { useConfig, usePrefixClass } from '../hooks/useConfig';\nimport { selectInjectKey, getSingleContent, getMultipleContent, getNewMultipleValue } from './helper';\nimport { useSelectOptions } from './hooks/useSelectOptions';\n\nexport default defineComponent({\n  name: 'TSelect',\n  props: { ...props },\n  setup(props: TdSelectProps, { slots, expose, ...res }) {\n    const classPrefix = usePrefixClass();\n    const disabled = useFormDisabled();\n    const renderTNodeJSX = useTNodeJSX();\n    const COMPONENT_NAME = usePrefixClass('select');\n    const { globalConfig, t } = useConfig('select');\n    const { popupVisible, inputValue, modelValue, value } = toRefs(props);\n    const [orgValue, setOrgValue] = useVModel(value, modelValue, props.defaultValue, props.onChange);\n    const selectPanelRef = ref(null);\n    const selectInputRef = ref(null);\n    const keys = computed(() => ({\n      label: props.keys?.label || 'label',\n      value: props.keys?.value || 'value',\n    }));\n    const { options, optionsMap, optionsList } = useSelectOptions(props, keys);\n\n    // 内部数据,格式化过的\n    const innerValue = computed(() => {\n      if (props.valueType === 'object') {\n        return !props.multiple\n          ? orgValue.value[keys.value.value]\n          : (orgValue.value as SelectValue[]).map((option) => option[keys.value.value]);\n      }\n      return orgValue.value;\n    });\n    const setInnerValue: TdSelectProps['onChange'] = (newVal: SelectValue | SelectValue[], e) => {\n      if (props.valueType === 'object') {\n        const { value, label } = keys.value;\n        const getOption = (val: SelectValue) => {\n          const option = optionsMap.value.get(val);\n          return {\n            [value]: get(option, value),\n            [label]: get(option, label),\n          };\n        };\n        newVal = props.multiple ? (newVal as SelectValue[]).map((val) => getOption(val)) : getOption(newVal);\n      }\n      if (newVal === orgValue.value) return;\n      setOrgValue(newVal, { selectedOptions: getSelectedOptions(newVal), trigger: e.trigger, e: e.e });\n    };\n\n    const [innerInputValue, setInputValue] = useDefaultValue(\n      inputValue,\n      props.defaultInputValue,\n      props.onInputChange,\n      'inputValue',\n    );\n    const [innerPopupVisible, setInnerPopupVisible] = useDefaultValue(\n      popupVisible,\n      false,\n      (visible: boolean, context: PopupVisibleChangeContext) => {\n        props.onPopupVisibleChange?.(visible, context);\n        props.onVisibleChange?.(visible);\n      },\n      'popupVisible',\n    );\n\n    const placeholderText = computed(\n      () =>\n        ((!props.multiple && innerPopupVisible.value && getSingleContent(innerValue.value, optionsList.value)) ||\n          props.placeholder) ??\n        t(globalConfig.value.placeholder),\n    );\n\n    // selectInput 展示值\n    const displayText = computed(() =>\n      props.multiple\n        ? getMultipleContent(innerValue.value as SelectValue[], optionsList.value)\n        : getSingleContent(innerValue.value, optionsList.value),\n    );\n\n    // valueDisplayParams参数\n    const valueDisplayParams = computed(() => {\n      return props.multiple && isArray(innerValue.value)\n        ? (innerValue.value as SelectValue[]).map((value) => ({\n            value,\n            label: optionsMap.value.get(value)?.label,\n          }))\n        : innerValue.value;\n    });\n\n    const isFilterable = computed(() => {\n      return Boolean(props.filterable || globalConfig.value.filterable || isFunction(props.filter));\n    });\n\n    // 移除tag\n    const removeTag = (index: number, e?: MouseEvent) => {\n      e && e.stopPropagation();\n      const selectValue = cloneDeep(innerValue.value) as SelectValue[];\n      const value = selectValue[index];\n      selectValue.splice(index, 1);\n      setInnerValue(selectValue, { selectedOptions: getSelectedOptions(selectValue), trigger: 'tag-remove', e });\n      props.onRemove?.({\n        value: value as string | number,\n        data: optionsMap.value.get(value),\n        e,\n      });\n    };\n\n    const handleCreate = () => {\n      if (!innerInputValue.value) return;\n      props.onCreate?.(innerInputValue.value);\n      setInputValue('');\n    };\n\n    // 键盘操作逻辑\n    const hoverIndex = ref(-1);\n    const handleKeyDown = (e: KeyboardEvent) => {\n      const optionsListLength = optionsList.value.length;\n      let newIndex = hoverIndex.value;\n      switch (e.code) {\n        case 'ArrowUp':\n          e.preventDefault();\n          if (hoverIndex.value === -1) {\n            newIndex = 0;\n          } else if (hoverIndex.value === 0) {\n            newIndex = optionsListLength - 1;\n          } else {\n            newIndex--;\n          }\n          if (optionsList.value[newIndex]?.disabled) {\n            newIndex--;\n          }\n          hoverIndex.value = newIndex;\n          break;\n        case 'ArrowDown':\n          e.preventDefault();\n          if (hoverIndex.value === -1 || hoverIndex.value === optionsListLength - 1) {\n            newIndex = 0;\n          } else {\n            newIndex++;\n          }\n          if (optionsList.value[newIndex]?.disabled) {\n            newIndex++;\n          }\n          hoverIndex.value = newIndex;\n          break;\n        case 'Enter':\n          if (hoverIndex.value === -1) break;\n          if (!innerPopupVisible.value) {\n            setInnerPopupVisible(true, { e });\n            break;\n          }\n          if (!props.multiple) {\n            setInnerValue(optionsList.value[hoverIndex.value].value, {\n              selectedOptions: getSelectedOptions(optionsList.value[hoverIndex.value].value),\n              trigger: 'check',\n              e,\n            });\n            setInnerPopupVisible(false, { e });\n          } else {\n            if (hoverIndex.value === -1) return;\n            const optionValue = optionsList.value[hoverIndex.value]?.value;\n            if (!optionValue) return;\n            const newValue = getNewMultipleValue(innerValue.value, optionValue);\n            setInnerValue(newValue.value, {\n              selectedOptions: getSelectedOptions(newValue.value),\n              trigger: newValue.isCheck ? 'check' : 'uncheck',\n              e,\n            });\n          }\n          break;\n        case 'Escape':\n          setInnerPopupVisible(false, { e });\n          break;\n      }\n    };\n\n    const popupContentRef = computed(() => selectInputRef.value?.selectInputRef.getOverlay() as HTMLElement);\n\n    /**\n     * 可选选项的列表\n     * 排除已禁用和全选的选项\n     */\n    const optionalList = computed(() =>\n      optionsList.value.filter((item) => {\n        return !item.disabled && !item['check-all'] && !item.checkAll;\n      }),\n    );\n\n    const getSelectedOptions = (selectValue: SelectValue[] | SelectValue = innerValue.value) => {\n      return optionsList.value.filter((option) => {\n        if (option.checkAll) return;\n        if (Array.isArray(selectValue)) return selectValue.includes(option.value);\n        return selectValue === option.value;\n      });\n    };\n\n    const onCheckAllChange = (checked: boolean) => {\n      if (!props.multiple) return;\n      const value = checked ? optionalList.value.map((option) => option.value) : [];\n      setInnerValue(value, { selectedOptions: getSelectedOptions(value), trigger: checked ? 'check' : 'clear' });\n    };\n\n    // 已选的长度\n    const intersectionLen = computed<number>(() => {\n      const values = optionalList.value.map((item) => item.value);\n      const n = intersection(innerValue.value, values);\n      return n.length;\n    });\n\n    // 全选\n    const isCheckAll = computed<boolean>(() => {\n      return intersectionLen.value === optionalList.value.length;\n    });\n\n    // 半选\n    const indeterminate = computed<boolean>(() => !isCheckAll.value && intersectionLen.value !== 0);\n\n    const SelectProvide = computed(() => ({\n      max: props.max,\n      multiple: props.multiple,\n      hoverIndex: hoverIndex.value,\n      selectValue: innerValue.value,\n      reserveKeyword: props.reserveKeyword,\n      handleValueChange: setInnerValue,\n      handlerInputChange: setInputValue,\n      handlePopupVisibleChange: setInnerPopupVisible,\n      handleCreate,\n      size: props.size,\n      popupContentRef,\n      indeterminate: indeterminate.value,\n      isCheckAll: isCheckAll.value,\n      onCheckAllChange,\n      getSelectedOptions,\n    }));\n\n    provide(selectInjectKey, SelectProvide);\n\n    const checkValueInvalid = () => {\n      // 参数类型检测与修复\n      if (!props.multiple && isArray(orgValue.value)) {\n        setOrgValue(undefined);\n      }\n      if (props.multiple && !isArray(orgValue.value)) {\n        setOrgValue([]);\n      }\n    };\n    const handleSearch = debounce((value: string) => {\n      props.onSearch?.(`${value}`);\n    }, 300);\n\n    watch(\n      orgValue,\n      () => {\n        checkValueInvalid();\n      },\n      {\n        immediate: true,\n      },\n    );\n    watch(\n      () => props.multiple,\n      () => {\n        checkValueInvalid();\n      },\n    );\n    watch(innerPopupVisible, (value) => {\n      if (value) {\n        // 显示\n        hoverIndex.value = -1;\n      } else {\n        // 隐藏\n        // eslint-disable-next-line no-lonely-if\n        if (innerInputValue.value) {\n          setInputValue('');\n        }\n      }\n    });\n\n    // 列表展开时定位置选中项\n    const updateScrollTop = (content: HTMLDivElement) => {\n      if (!selectPanelRef.value) {\n        return;\n      }\n      const firstSelectedNode: HTMLDivElement = (selectPanelRef.value?.innerRef as HTMLDivElement)?.querySelector(\n        `.${classPrefix.value}-is-selected`,\n      );\n      // 此处需要等待渲染后进行计算\n      nextTick(() => {\n        if (firstSelectedNode && content) {\n          const { paddingBottom } = getComputedStyle(firstSelectedNode);\n          const { marginBottom } = getComputedStyle(content);\n          const elementBottomHeight = parseInt(paddingBottom, 10) + parseInt(marginBottom, 10);\n          // 小于0时不需要特殊处理，会被设为0\n          const updateValue =\n            firstSelectedNode.offsetTop -\n            content.offsetTop -\n            (content.clientHeight - firstSelectedNode.clientHeight) +\n            elementBottomHeight;\n          // eslint-disable-next-line no-param-reassign\n          content.scrollTop = updateValue;\n        }\n      });\n    };\n    provide('updateScrollTop', updateScrollTop);\n\n    return () => {\n      const { overlayClassName, ...restPopupProps } = (props.popupProps || {}) as TdSelectProps['popupProps'];\n      return (\n        <div class={`${COMPONENT_NAME.value}__wrap`}>\n          <SelectInput\n            {...{\n              autoWidth: props.autoWidth,\n              readonly: props.readonly,\n              borderless: props.borderless || !props.bordered,\n              multiple: props.multiple,\n              clearable: props.clearable,\n              loading: props.loading,\n              status: props.status,\n              tips: props.tips,\n              minCollapsedNum: props.minCollapsedNum,\n            }}\n            ref={selectInputRef}\n            class={COMPONENT_NAME.value}\n            value={displayText.value}\n            disabled={disabled.value}\n            popupVisible={innerPopupVisible.value}\n            inputValue={innerPopupVisible.value ? innerInputValue.value : ''}\n            placeholder={`${placeholderText.value}`}\n            allowInput={isFilterable.value}\n            collapsed-items={props.collapsedItems}\n            inputProps={{\n              size: props.size,\n              ...(props.inputProps as TdSelectProps['inputProps']),\n              onkeydown: handleKeyDown,\n            }}\n            tagInputProps={{\n              size: props.size,\n              ...(props.tagInputProps as TdSelectProps['tagInputProps']),\n            }}\n            onTagChange={(val, ctx) => {\n              removeTag(ctx.index);\n            }}\n            tagProps={{ ...(props.tagProps as TdSelectProps['tagProps']) }}\n            popupProps={{\n              overlayClassName: [`${COMPONENT_NAME.value}__dropdown`, overlayClassName],\n              ...restPopupProps,\n            }}\n            label={() => renderTNodeJSX('prefixIcon')}\n            suffixIcon={() =>\n              props.showArrow && (\n                <FakeArrow\n                  overlayClassName={`${COMPONENT_NAME.value}__right-icon`}\n                  isActive={innerPopupVisible.value}\n                />\n              )\n            }\n            valueDisplay={() =>\n              renderTNodeJSX('valueDisplay', {\n                params: { value: valueDisplayParams.value, onClose: (index: number) => removeTag(index) },\n              })\n            }\n            onPopupVisibleChange={(val: boolean, context) => {\n              setInnerPopupVisible(val, context);\n            }}\n            onInputChange={(value) => {\n              if (!innerPopupVisible.value) return;\n              setInputValue(value);\n              handleSearch(`${value}`);\n            }}\n            onClear={({ e }) => {\n              setInnerValue(props.multiple ? [] : undefined, {\n                selectedOptions: getSelectedOptions(props.multiple ? [] : undefined),\n                trigger: 'clear',\n                e,\n              });\n              props.onClear?.({ e });\n            }}\n            onEnter={(inputValue, { e }) => {\n              props.onEnter?.({ inputValue: `${innerInputValue.value}`, e, value: innerValue.value });\n              handleCreate();\n            }}\n            onBlur={(inputValue, { e }) => {\n              props.onBlur?.({ e, value: innerValue.value });\n            }}\n            onFocus={(inputValue, { e }) => {\n              props.onFocus?.({ e, value: innerValue.value });\n            }}\n            {...(props.selectInputProps as TdSelectProps['selectInputProps'])}\n            v-slots={{\n              panel: () => (\n                <SelectPanel\n                  ref={selectPanelRef}\n                  {...picker(props, [\n                    'size',\n                    'multiple',\n                    'empty',\n                    'loading',\n                    'loadingText',\n                    'filterable',\n                    'creatable',\n                    'panelTopContent',\n                    'panelBottomContent',\n                    'filter',\n                    'scroll',\n                  ])}\n                  options={options.value}\n                  inputValue={innerInputValue.value}\n                  v-slots={slots}\n                />\n              ),\n              collapsedItems: slots.collapsedItems,\n            }}\n          />\n        </div>\n      );\n    };\n  },\n});\n"],"names":["defineComponent","name","props","setup","slots","expose","res","classPrefix","usePrefixClass","disabled","useFormDisabled","renderTNodeJSX","useTNodeJSX","COMPONENT_NAME","useConfig","globalConfig","t","toRefs","popupVisible","inputValue","modelValue","value","useVModel","defaultValue","onChange","orgValue","setOrgValue","selectPanelRef","ref","selectInputRef","keys","computed","label","useSelectOptions","options","optionsMap","optionsList","innerValue","valueType","multiple","map","option","setInnerValue","newVal","e","getOption","val","get","selectedOptions","getSelectedOptions","trigger","useDefaultValue","defaultInputValue","onInputChange","innerInputValue","setInputValue","visible","context","onPopupVisibleChange","onVisibleChange","innerPopupVisible","setInnerPopupVisible","placeholderText","getSingleContent","placeholder","displayText","getMultipleContent","valueDisplayParams","isArray","isFilterable","Boolean","filterable","isFunction","filter","removeTag","index","stopPropagation","selectValue","cloneDeep","splice","onRemove","data","handleCreate","onCreate","hoverIndex","handleKeyDown","optionsListLength","length","newIndex","code","preventDefault","optionValue","newValue","getNewMultipleValue","isCheck","popupContentRef","getOverlay","optionalList","item","checkAll","Array","includes","onCheckAllChange","checked","intersectionLen","values","n","intersection","isCheckAll","indeterminate","SelectProvide","max","reserveKeyword","handleValueChange","handlerInputChange","handlePopupVisibleChange","size","provide","selectInjectKey","checkValueInvalid","handleSearch","debounce","onSearch","watch","immediate","updateScrollTop","content","firstSelectedNode","innerRef","querySelector","nextTick","getComputedStyle","paddingBottom","marginBottom","elementBottomHeight","parseInt","updateValue","offsetTop","clientHeight","scrollTop","popupProps","overlayClassName","restPopupProps","_createVNode","_mergeProps","autoWidth","readonly","borderless","bordered","clearable","loading","status","tips","minCollapsedNum","collapsedItems","inputProps","onkeydown","tagInputProps","ctx","tagProps","showArrow","params","onClose","onClear","onEnter","onBlur","onFocus","selectInputProps","panel","picker"],"mappings":"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"}