/**
 * tdesign v0.24.2
 * (c) 2022 tdesign
 * @license MIT
 */

import { defineComponent, ref, reactive, computed, onMounted, createVNode } from 'vue';
import props from './props.mjs';
import generateBase64Url from '../_common/js/watermark/generateBase64Url.mjs';
import randomMovingStyle from '../_common/js/watermark/randomMovingStyle.mjs';
import injectStyle from '../_common/js/utils/injectStyle.mjs';
import { usePrefixClass } from '../hooks/useConfig.mjs';
import { useMutationObserver } from './hooks.mjs';
import { useContent } from '../hooks/tnode.mjs';
import '../_chunks/dep-3cecb2d2.mjs';
import '../config-provider/useConfig.mjs';
import '../_chunks/dep-a953bb61.mjs';
import '../_chunks/dep-ad7eea53.mjs';
import '../_chunks/dep-b43427a8.mjs';
import '../_chunks/dep-cab779bd.mjs';
import '../_chunks/dep-8c2e57f5.mjs';
import '../_chunks/dep-c5944b2d.mjs';
import '../_chunks/dep-f5995493.mjs';
import '../_chunks/dep-21468dc9.mjs';
import '../_chunks/dep-a39da6ce.mjs';
import '../_chunks/dep-f5b976b2.mjs';
import '../_chunks/dep-d904f554.mjs';
import '../_chunks/dep-1984c62f.mjs';
import '../_chunks/dep-cd44ef02.mjs';
import '../_chunks/dep-63f67da3.mjs';
import '../_chunks/dep-a537ee3e.mjs';
import '../_chunks/dep-a6ebc045.mjs';
import '../_chunks/dep-6f8d8885.mjs';
import '../_chunks/dep-6ad4a916.mjs';
import '../_chunks/dep-de110986.mjs';
import '../_chunks/dep-2e0d3d32.mjs';
import '../_chunks/dep-e478235e.mjs';
import '../_chunks/dep-a8f3adf1.mjs';
import '../_chunks/dep-c692ab23.mjs';
import '../_chunks/dep-e23bac6d.mjs';
import '../_chunks/dep-6d55d809.mjs';
import '../_common/js/global-config/default-config.mjs';
import '../_common/js/global-config/locale/zh_CN.mjs';
import '../config-provider/type.mjs';
import '../_chunks/dep-d52a3086.mjs';
import '../_chunks/dep-2517604a.mjs';
import '../_chunks/dep-22081ace.mjs';
import '../_chunks/dep-eede90e8.mjs';
import '../_chunks/dep-7b441284.mjs';
import '../_chunks/dep-13628992.mjs';
import '../_chunks/dep-0510ab65.mjs';
import '../_chunks/dep-2022ae69.mjs';
import '../_chunks/dep-71ce186a.mjs';
import '../utils/render-tnode.mjs';
import '../_chunks/dep-f8038a0a.mjs';
import '../_chunks/dep-dcaa2bc6.mjs';
import '../_chunks/dep-0cf2dc82.mjs';

var _Watermark = defineComponent({
  name: "TWatermark",
  props: props,
  setup: function setup(props2) {
    var backgroundImage = ref("");
    var watermarkRef = ref();
    var watermarkContentRef = ref();
    var parent = ref();
    var offset = reactive(props2.offset || []);
    var gapX = computed(function () {
      return props2.movable ? 0 : props2.x;
    });
    var gapY = computed(function () {
      return props2.movable ? 0 : props2.y;
    });
    var rotate = computed(function () {
      return props2.movable ? 0 : props2.rotate;
    });
    var backgroundRepeat = computed(function () {
      if (props2.movable) {
        return "no-repeat";
      }
      return props2.isRepeat ? "repeat" : "no-repeat";
    });
    var offsetLeft = computed(function () {
      return offset[0] || gapX.value / 2;
    });
    var offsetTop = computed(function () {
      return offset[1] || gapY.value / 2;
    });
    var bgImageOptions = {
      width: props2.width,
      height: props2.height,
      rotate: rotate.value,
      lineSpace: props2.lineSpace,
      alpha: props2.alpha,
      gapX: gapX.value,
      gapY: gapY.value,
      watermarkContent: props2.watermarkContent,
      offsetLeft: offsetLeft.value,
      offsetTop: offsetTop.value
    };
    onMounted(function () {
      generateBase64Url(bgImageOptions, function (base64Url) {
        backgroundImage.value = base64Url;
      });
      parent.value = watermarkRef.value.parentElement;
      var keyframesStyle = randomMovingStyle();
      injectStyle(keyframesStyle);
      useMutationObserver(parent.value, function (mutations) {
        if (props2.removable) return;
        mutations.forEach(function (mutation) {
          if (mutation.type === "childList") {
            var removeNodes = mutation.removedNodes;
            removeNodes.forEach(function (node) {
              var element = node;
              if (element === watermarkRef.value) {
                parent.value.appendChild(element);
              }
              if (element === watermarkContentRef.value) {
                watermarkRef.value.appendChild(element);
              }
            });
          }
        });
      }, {
        attributes: true,
        childList: true,
        characterData: true,
        subtree: true
      });
    });
    return {
      gapX: gapX,
      gapY: gapY,
      backgroundRepeat: backgroundRepeat,
      backgroundImage: backgroundImage,
      watermarkRef: watermarkRef,
      watermarkContentRef: watermarkContentRef,
      bgImageOptions: bgImageOptions
    };
  },
  render: function render() {
    var COMPONENT_NAME = usePrefixClass("watermark");
    var renderContent = useContent();
    return createVNode("div", {
      "style": {
        position: "relative",
        overflow: "hidden",
        width: "100%"
      },
      "class": COMPONENT_NAME.value,
      "ref": "watermarkRef"
    }, [renderContent("default", "content"), createVNode("div", {
      "ref": "watermarkContentRef",
      "style": {
        zIndex: this.zIndex,
        position: "absolute",
        left: 0,
        right: 0,
        top: 0,
        bottom: 0,
        width: "100%",
        height: "100%",
        backgroundSize: "".concat(this.gapX + this.width, "px"),
        pointerEvents: "none",
        backgroundRepeat: this.backgroundRepeat,
        backgroundImage: "url('".concat(this.backgroundImage, "')"),
        animation: this.movable ? "watermark infinite ".concat(this.moveInterval * 4 / 60, "s") : "none"
      }
    }, null)]);
  }
});

export { _Watermark as default };
//# sourceMappingURL=watermark.mjs.map
