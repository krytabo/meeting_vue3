{"version":3,"file":"calendar.mjs","sources":["../../src/calendar/calendar.tsx"],"sourcesContent":["import { defineComponent, computed, watch } from 'vue';\n// 通用库\nimport dayjs from 'dayjs';\nimport props from './props';\nimport * as utils from './utils';\nimport { useConfig } from '../hooks/useConfig';\nimport { useContent } from '../hooks/tnode';\nimport { useState, useCalendarClass, userController, useColHeaders } from './hook';\n\n// 组件的一些常量\nimport { COMPONENT_NAME, MIN_YEAR, FIRST_MONTH_OF_YEAR, LAST_MONTH_OF_YEAR, DEFAULT_YEAR_CELL_NUMINROW } from './const';\n\n// 子组件\nimport { Select as TSelect, Option as TOption } from '../select';\nimport { RadioGroup as TRadioGroup, RadioButton as TRadioButton } from '../radio';\nimport { Button as TButton } from '../button';\nimport { CheckTag as TCheckTag } from '../tag';\nimport CalendarCellItem from './calendar-cell';\n\n// 组件相关类型\nimport { CalendarCell } from './type';\nimport { CalendarRange, YearMonthOption, ModeOption, CellEventOption } from './interface';\n\n// 组件逻辑\nexport default defineComponent({\n  name: 'TCalendar',\n  props: { ...props },\n  setup(props, { slots }) {\n    const renderContent = useContent();\n    const { t, globalConfig } = useConfig(COMPONENT_NAME);\n    // 组件内部状态管理\n    const { state, toToday, checkDayVisibled } = useState(props);\n\n    // 样式\n    const cls = useCalendarClass(props, state);\n\n    // 日历主体头部（日历模式下使用）\n    const { cellColHeaders } = useColHeaders(props, state);\n\n    // 日历控件栏（右上角）\n    const controller = userController(props, state);\n\n    // 年\\月份下拉框\n    const rangeFromTo = computed<CalendarRange>(() => {\n      if (!props.range || props.range.length < 2) {\n        return null;\n      }\n      const [v1, v2] = props.range;\n      if (dayjs(v1).isBefore(dayjs(v2))) {\n        return {\n          from: v1,\n          to: v2,\n        };\n      }\n      return {\n        from: v2,\n        to: v1,\n      };\n    });\n    function checkMonthAndYearSelecterDisabled(year: number, month: number): boolean {\n      let disabled = false;\n      if (rangeFromTo.value && rangeFromTo.value.from && rangeFromTo.value.to) {\n        const beginYear = dayjs(rangeFromTo.value.from).year();\n        const endYear = dayjs(rangeFromTo.value.to).year();\n        if (year === beginYear) {\n          const beginMon = parseInt(dayjs(rangeFromTo.value.from).format('M'), 10);\n          disabled = month < beginMon;\n        } else if (year === endYear) {\n          const endMon = parseInt(dayjs(rangeFromTo.value.to).format('M'), 10);\n          disabled = month > endMon;\n        }\n      }\n      return disabled;\n    }\n    watch(\n      () => {\n        return {\n          year: `${state.curSelectedYear}`,\n          month: `${state.curSelectedMonth}`,\n        };\n      },\n      (v: { month: string; year: string }) => {\n        typeof props.onMonthChange === 'function' && props.onMonthChange({ ...v });\n        controller.emitControllerChange();\n      },\n    );\n    const dateSelect = {\n      yearSelectOptionList: computed<YearMonthOption[]>(() => {\n        const re: YearMonthOption[] = [];\n        let begin: number = state.curSelectedYear - 10;\n        let end: number = state.curSelectedYear + 10;\n        if (rangeFromTo.value && rangeFromTo.value.from && rangeFromTo.value.to) {\n          begin = dayjs(rangeFromTo.value.from).year();\n          end = dayjs(rangeFromTo.value.to).year();\n        }\n\n        if (begin < MIN_YEAR) {\n          begin = MIN_YEAR;\n        }\n        if (end < MIN_YEAR) {\n          end = MIN_YEAR;\n        }\n\n        for (let i = begin; i <= end; i++) {\n          const disabled = checkMonthAndYearSelecterDisabled(i, state.curSelectedMonth);\n          re.push({\n            value: i,\n            label: t(globalConfig.value.yearSelection, { year: i }),\n            disabled,\n          });\n        }\n        return re;\n      }),\n      isYearSelectVisible: computed<boolean>(() => {\n        return controller.checkControllerVisible('year');\n      }),\n      isYearSelectDisabled: computed<boolean>(() => {\n        return controller.checkControllerDisabled('year', 'selectProps');\n      }),\n      monthSelectOptionList: computed<YearMonthOption[]>(() => {\n        const re: YearMonthOption[] = [];\n        for (let i = FIRST_MONTH_OF_YEAR; i <= LAST_MONTH_OF_YEAR; i++) {\n          const disabled = checkMonthAndYearSelecterDisabled(state.curSelectedYear, i);\n          re.push({\n            value: i,\n            label: t(globalConfig.value.monthSelection, { month: i }),\n            disabled,\n          });\n        }\n        return re;\n      }),\n      isMonthSelectVisible: computed<boolean>(() => {\n        return state.curSelectedMode === 'month' && controller.checkControllerVisible('month');\n      }),\n      isMonthSelectDisabled: computed<boolean>(() => {\n        return controller.checkControllerDisabled('month', 'selectProps');\n      }),\n    };\n    // 模式选项\n    const modeSelect = {\n      optionList: computed<ModeOption[]>(() => {\n        return [\n          { value: 'month', label: t(globalConfig.value.monthRadio) },\n          { value: 'year', label: t(globalConfig.value.yearRadio) },\n        ];\n      }),\n      isVisible: computed<boolean>(() => {\n        return controller.checkControllerVisible('mode');\n      }),\n      isDisabled: computed<boolean>(() => {\n        return controller.checkControllerDisabled('mode', 'radioGroupProps');\n      }),\n    };\n    // 显示\\隐藏周末按钮\n    const weekendBtn = {\n      text: computed<string>(() => {\n        return state.isShowWeekend ? t(globalConfig.value.hideWeekend) : t(globalConfig.value.showWeekend);\n      }),\n      vBind: computed<object>(() => {\n        const c = controller.configData.value.weekend;\n        return state.isShowWeekend ? c.hideWeekendButtonProps : c.showWeekendButtonProps;\n      }),\n      isVisible: computed<boolean>(() => {\n        return (\n          props.theme === 'full' &&\n          controller.checkControllerVisible('current') &&\n          controller.checkControllerVisible('weekend')\n        );\n      }),\n      isDisabled: computed<boolean>(() => {\n        const p = state.isShowWeekend ? 'hideWeekendButtonProps' : 'showWeekendButtonProps';\n        return controller.checkControllerDisabled('weekend', p);\n      }),\n    };\n    // 今天\\本月按钮\n    const currentBtn = {\n      text: computed<string>(() => {\n        return state.curSelectedMode === 'month' ? t(globalConfig.value.today) : t(globalConfig.value.thisMonth);\n      }),\n      vBind: computed<object>(() => {\n        const c = controller.configData.value.current;\n        return state.curSelectedMode === 'month' ? c.currentDayButtonProps : c.currentMonthButtonProps;\n      }),\n      isVisible: computed<boolean>(() => {\n        return props.theme === 'full' && controller.checkControllerVisible('current');\n      }),\n      isDisabled: computed(() => {\n        const p = state.curSelectedMode === 'month' ? 'currentDayButtonProps' : 'currentMonthButtonProps';\n        return controller.checkControllerDisabled('current', p);\n      }),\n    };\n\n    const renderControl = () => {\n      return (\n        <div class={cls.control.value}>\n          <div class={cls.title.value}>\n            {renderContent('head', undefined, {\n              params: { ...controller.options.value },\n            })}\n          </div>\n          <div class={cls.controlSection.value}>\n            {dateSelect.isYearSelectVisible.value && (\n              <div class={cls.controlSectionCell.value}>\n                <TSelect\n                  v-model={state.curSelectedYear}\n                  size={state.controlSize}\n                  autoWidth={true}\n                  {...controller.configData.value.year.selectProps}\n                  disabled={dateSelect.isYearSelectDisabled.value}\n                >\n                  {dateSelect.yearSelectOptionList.value.map((item) => (\n                    <TOption key={item.value} value={item.value} label={item.label} disabled={item.disabled}>\n                      {item.label}\n                    </TOption>\n                  ))}\n                </TSelect>\n              </div>\n            )}\n            {dateSelect.isMonthSelectVisible.value && (\n              <div class={cls.controlSectionCell.value}>\n                <TSelect\n                  autoWidth={true}\n                  v-model={state.curSelectedMonth}\n                  size={state.controlSize}\n                  {...controller.configData.value.month.selectProps}\n                  disabled={dateSelect.isMonthSelectDisabled.value}\n                >\n                  {dateSelect.monthSelectOptionList.value.map((item) => (\n                    <TOption key={item.value} value={item.value} label={item.label} disabled={item.disabled}>\n                      {item.label}\n                    </TOption>\n                  ))}\n                </TSelect>\n              </div>\n            )}\n            {modeSelect.isVisible.value && (\n              <div class={cls.controlSectionCell.value} style=\"height: auto\">\n                <TRadioGroup\n                  v-model={state.curSelectedMode}\n                  variant=\"default-filled\"\n                  size={state.controlSize}\n                  {...controller.configData.value.mode.radioGroupProps}\n                  disabled={modeSelect.isDisabled.value}\n                  onChange={controller.emitControllerChange}\n                >\n                  {modeSelect.optionList.value.map((item) => (\n                    <TRadioButton key={item.value} value={item.value}>\n                      {item.label}\n                    </TRadioButton>\n                  ))}\n                </TRadioGroup>\n              </div>\n            )}\n            {weekendBtn.isVisible.value && (\n              <div class={cls.controlSectionCell.value}>\n                <TCheckTag\n                  class={cls.controlTag.value}\n                  theme={state.isShowWeekend ? 'default' : 'primary'}\n                  size={state.controlSize}\n                  {...weekendBtn.vBind.value}\n                  disabled={weekendBtn.isDisabled.value}\n                  onClick={() => {\n                    state.isShowWeekend = !state.isShowWeekend;\n                    controller.emitControllerChange();\n                  }}\n                >\n                  {weekendBtn.text.value}\n                </TCheckTag>\n              </div>\n            )}\n            {currentBtn.isVisible.value && (\n              <div class={cls.controlSectionCell.value}>\n                <TButton\n                  size={state.controlSize}\n                  {...currentBtn.vBind.value}\n                  disabled={currentBtn.isDisabled.value}\n                  onClick={() => {\n                    toToday();\n                  }}\n                >\n                  {currentBtn.text.value}\n                </TButton>\n              </div>\n            )}\n          </div>\n        </div>\n      );\n    };\n\n    const cellClickEmit = (eventPropsName: string, e: MouseEvent, cellData: CalendarCell): void => {\n      if (typeof props[eventPropsName] === 'function') {\n        const options: CellEventOption = {\n          cell: {\n            ...cellData,\n            ...controller.options.value,\n          },\n          e,\n        };\n        props[eventPropsName](options);\n      }\n    };\n    const clickCell = (e: MouseEvent, cellData: CalendarCell): void => {\n      state.curDate = dayjs(cellData.date);\n      cellClickEmit('onCellClick', e, cellData);\n    };\n    const doubleClickCell = (e: MouseEvent, cellData: CalendarCell): void => {\n      cellClickEmit('onCellDoubleClick', e, cellData);\n    };\n    const rightClickCell = (e: MouseEvent, cellData: CalendarCell): void => {\n      if (props.preventCellContextmenu) {\n        e.preventDefault();\n      }\n      cellClickEmit('onCellRightClick', e, cellData);\n    };\n\n    const monthCellsData = computed<CalendarCell[][]>(() => {\n      const daysArr: CalendarCell[][] = utils.createMonthCellsData(\n        state.curSelectedYear,\n        state.curSelectedMonth,\n        state.realFirstDayOfWeek,\n        state.curDate,\n        props.format,\n      );\n      return daysArr;\n    });\n    const renderMonthBody = () => {\n      return (\n        <table class={cls.table.value}>\n          <thead class={cls.tableHead.value}>\n            <tr class={cls.tableHeadRow.value}>\n              {cellColHeaders.value.map(\n                (item, index) =>\n                  checkDayVisibled(item.num) && (\n                    <th class={cls.tableHeadCell.value}>\n                      {Array.isArray(props.week)\n                        ? props.week[index]\n                        : renderContent('week', undefined, {\n                            defaultNode: <span>{item.display}</span>,\n                            params: { day: item.num },\n                          })}\n                    </th>\n                  ),\n              )}\n            </tr>\n          </thead>\n\n          <tbody class={cls.tableBody.value}>\n            {monthCellsData.value.map((week, weekIndex) => (\n              <tr class={cls.tableBodyRow.value}>\n                {week.map(\n                  (item, itemIndex) =>\n                    (state.isShowWeekend || item.day < 6) && (\n                      <CalendarCellItem\n                        key={`d-${weekIndex}-${itemIndex}`}\n                        item={item}\n                        theme={props.theme}\n                        t={t}\n                        global={globalConfig.value}\n                        cell={props.cell}\n                        fillWithZero={props.fillWithZero}\n                        onClick={(e: MouseEvent) => clickCell(e, item)}\n                        onDblclick={(e: MouseEvent) => doubleClickCell(e, item)}\n                        onRightclick={(e: MouseEvent) => rightClickCell(e, item)}\n                        v-slots={{ ...slots }}\n                      ></CalendarCellItem>\n                    ),\n                )}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      );\n    };\n\n    const yearCellsData = computed<CalendarCell[][]>(() => {\n      const re: CalendarCell[][] = [];\n      const monthsArr: CalendarCell[] = utils.createYearCellsData(state.curSelectedYear, state.curDate, props.format);\n      const rowCount = Math.ceil(monthsArr.length / DEFAULT_YEAR_CELL_NUMINROW);\n      let index = 0;\n      for (let i = 1; i <= rowCount; i++) {\n        const row: CalendarCell[] = [];\n        for (let j = 1; j <= DEFAULT_YEAR_CELL_NUMINROW; j++) {\n          row.push(monthsArr[index]);\n          index += 1;\n        }\n        re.push(row);\n      }\n      return re;\n    });\n    const renderYearBody = () => {\n      return (\n        <table class={cls.table.value}>\n          <tbody class={cls.tableBody.value}>\n            {yearCellsData.value.map((cell, cellIndex) => (\n              <tr class={cls.tableBodyRow.value}>\n                {cell.map((item, itemIndex) => (\n                  <CalendarCellItem\n                    key={`m-${cellIndex}-${itemIndex}`}\n                    item={item}\n                    theme={props.theme}\n                    t={t}\n                    global={globalConfig.value}\n                    cell={props.cell}\n                    fillWithZero={props.fillWithZero}\n                    onClick={(e: MouseEvent) => clickCell(e, item)}\n                    onDblclick={(e: MouseEvent) => doubleClickCell(e, item)}\n                    onRightclick={(e: MouseEvent) => rightClickCell(e, item)}\n                    v-slots={{ ...slots }}\n                  ></CalendarCellItem>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      );\n    };\n\n    return () => {\n      return (\n        <div class={cls.body.value}>\n          {controller.visible.value && renderControl()}\n          <div class={cls.panel.value}>{state.curSelectedMode === 'month' ? renderMonthBody() : renderYearBody()}</div>\n        </div>\n      );\n    };\n  },\n});\n"],"names":["_isVNode","defineComponent","name","props","setup","slots","renderContent","useContent","useConfig","COMPONENT_NAME","t","globalConfig","useState","state","toToday","checkDayVisibled","cls","useCalendarClass","useColHeaders","cellColHeaders","controller","userController","rangeFromTo","computed","range","length","v1","v2","dayjs","isBefore","from","to","checkMonthAndYearSelecterDisabled","year","month","disabled","value","beginYear","endYear","beginMon","parseInt","format","endMon","watch","curSelectedYear","curSelectedMonth","v","onMonthChange","emitControllerChange","dateSelect","yearSelectOptionList","re","begin","end","MIN_YEAR","i","push","label","yearSelection","isYearSelectVisible","checkControllerVisible","isYearSelectDisabled","checkControllerDisabled","monthSelectOptionList","FIRST_MONTH_OF_YEAR","LAST_MONTH_OF_YEAR","monthSelection","isMonthSelectVisible","curSelectedMode","isMonthSelectDisabled","modeSelect","optionList","monthRadio","yearRadio","isVisible","isDisabled","weekendBtn","text","isShowWeekend","hideWeekend","showWeekend","vBind","c","configData","weekend","hideWeekendButtonProps","showWeekendButtonProps","theme","p","currentBtn","today","thisMonth","current","currentDayButtonProps","currentMonthButtonProps","renderControl","_createVNode","control","title","params","options","controlSection","controlSectionCell","TSelect","_mergeProps","controlSize","selectProps","map","item","TOption","TRadioGroup","mode","radioGroupProps","TRadioButton","TCheckTag","controlTag","TButton","cellClickEmit","eventPropsName","e","cellData","cell","clickCell","curDate","date","doubleClickCell","rightClickCell","preventCellContextmenu","preventDefault","monthCellsData","daysArr","utils","realFirstDayOfWeek","renderMonthBody","table","tableHead","tableHeadRow","index","num","tableHeadCell","Array","isArray","week","defaultNode","display","day","tableBody","weekIndex","tableBodyRow","itemIndex","fillWithZero","yearCellsData","monthsArr","rowCount","Math","ceil","DEFAULT_YEAR_CELL_NUMINROW","row","j","renderYearBody","cellIndex","body","visible","panel"],"mappings":"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"}