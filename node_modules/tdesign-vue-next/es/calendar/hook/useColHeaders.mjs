/**
 * tdesign v0.24.2
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _typeof } from '../../_chunks/dep-21468dc9.mjs';
import { computed } from 'vue';
import '../../hooks/useConfig.mjs';
import { COMPONENT_NAME } from '../const.mjs';
import { getDayCn } from '../utils.mjs';
import { useConfig } from '../../config-provider/useConfig.mjs';
import '../../_chunks/dep-a953bb61.mjs';
import '../../_chunks/dep-ad7eea53.mjs';
import '../../_chunks/dep-b43427a8.mjs';
import '../../_chunks/dep-cab779bd.mjs';
import '../../_chunks/dep-8c2e57f5.mjs';
import '../../_chunks/dep-c5944b2d.mjs';
import '../../_chunks/dep-f5995493.mjs';
import '../../_chunks/dep-a39da6ce.mjs';
import '../../_chunks/dep-f5b976b2.mjs';
import '../../_chunks/dep-d904f554.mjs';
import '../../_chunks/dep-1984c62f.mjs';
import '../../_chunks/dep-cd44ef02.mjs';
import '../../_chunks/dep-63f67da3.mjs';
import '../../_chunks/dep-a537ee3e.mjs';
import '../../_chunks/dep-a6ebc045.mjs';
import '../../_chunks/dep-6f8d8885.mjs';
import '../../_chunks/dep-6ad4a916.mjs';
import '../../_chunks/dep-de110986.mjs';
import '../../_chunks/dep-2e0d3d32.mjs';
import '../../_chunks/dep-e478235e.mjs';
import '../../_chunks/dep-a8f3adf1.mjs';
import '../../_chunks/dep-c692ab23.mjs';
import '../../_chunks/dep-e23bac6d.mjs';
import '../../_chunks/dep-6d55d809.mjs';
import '../../_common/js/global-config/default-config.mjs';
import '../../_common/js/global-config/locale/zh_CN.mjs';
import '../../config-provider/type.mjs';
import '../../_chunks/dep-35b05994.mjs';

function useColHeaders(props, state) {
  var _useConfig = useConfig(COMPONENT_NAME),
    t = _useConfig.t,
    globalConfig = _useConfig.globalConfig;
  var weekDipalyText = computed(function () {
    return props.week || t(globalConfig.value.week).split(",");
  });
  function getWeekDisplay(weekNum) {
    var weekText = weekDipalyText.value;
    return _typeof(weekText) === "object" && weekText[weekNum - 1] ? weekText[weekNum - 1] : getDayCn(weekNum);
  }
  var cellColHeaders = computed(function () {
    var re = [];
    var min = 1;
    var max = 7;
    for (var i = state.realFirstDayOfWeek; i <= max; i++) {
      re.push({
        num: i,
        display: getWeekDisplay(i)
      });
    }
    if (state.realFirstDayOfWeek > min) {
      for (var _i = min; _i < state.realFirstDayOfWeek; _i++) {
        re.push({
          num: _i,
          display: getWeekDisplay(_i)
        });
      }
    }
    return re;
  });
  return {
    cellColHeaders: cellColHeaders
  };
}

export { useColHeaders };
//# sourceMappingURL=useColHeaders.mjs.map
