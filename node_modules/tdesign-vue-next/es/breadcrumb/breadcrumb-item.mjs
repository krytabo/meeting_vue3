/**
 * tdesign v0.24.2
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-3cecb2d2.mjs';
import { isVNode, defineComponent, ref, inject, computed, onMounted, onBeforeUpdate, createVNode, getCurrentInstance, mergeProps } from 'vue';
import { ChevronRightIcon } from 'tdesign-icons-vue-next';
import props from './breadcrumb-item-props.mjs';
import { Tooltip } from '../tooltip/index.mjs';
import { isNodeOverflow } from '../utils/dom.mjs';
import { usePrefixClass } from '../hooks/useConfig.mjs';
import { useGlobalIcon } from '../hooks/useGlobalIcon.mjs';
import '../tooltip/tooltip.mjs';
import '../_chunks/dep-fc49c640.mjs';
import '../_chunks/dep-33031998.mjs';
import '../_chunks/dep-c5944b2d.mjs';
import '../_chunks/dep-ad7eea53.mjs';
import '../_chunks/dep-f5995493.mjs';
import '../_chunks/dep-21468dc9.mjs';
import '../_chunks/dep-a39da6ce.mjs';
import '../tooltip/props.mjs';
import '../popup/props.mjs';
import '../popup/index.mjs';
import '../popup/popup.mjs';
import '@popperjs/core';
import '../utils/render-tnode.mjs';
import '../_chunks/dep-f8038a0a.mjs';
import '../_chunks/dep-dcaa2bc6.mjs';
import '../_chunks/dep-1984c62f.mjs';
import '../_chunks/dep-cd44ef02.mjs';
import '../_chunks/dep-63f67da3.mjs';
import '../_chunks/dep-a537ee3e.mjs';
import '../_chunks/dep-8c2e57f5.mjs';
import '../_chunks/dep-f5b976b2.mjs';
import '../_chunks/dep-6ad4a916.mjs';
import '../_chunks/dep-de110986.mjs';
import '../_chunks/dep-e478235e.mjs';
import '../_chunks/dep-0cf2dc82.mjs';
import '../_chunks/dep-2517604a.mjs';
import '../_chunks/dep-22081ace.mjs';
import '../_chunks/dep-eede90e8.mjs';
import '../_chunks/dep-7b441284.mjs';
import '../_chunks/dep-13628992.mjs';
import '../_chunks/dep-0510ab65.mjs';
import '../_chunks/dep-2022ae69.mjs';
import '../_chunks/dep-71ce186a.mjs';
import '../_common/js/utils/set-style.mjs';
import '../popup/container.mjs';
import '../_chunks/dep-cbaabd8b.mjs';
import '../hooks/useVModel.mjs';
import '../utils/withInstall.mjs';
import './style/css.mjs';
import '../popup/type.mjs';
import '../config-provider/useConfig.mjs';
import '../_chunks/dep-a953bb61.mjs';
import '../_chunks/dep-b43427a8.mjs';
import '../_chunks/dep-cab779bd.mjs';
import '../_chunks/dep-d904f554.mjs';
import '../_chunks/dep-a6ebc045.mjs';
import '../_chunks/dep-6f8d8885.mjs';
import '../_chunks/dep-2e0d3d32.mjs';
import '../_chunks/dep-a8f3adf1.mjs';
import '../_chunks/dep-c692ab23.mjs';
import '../_chunks/dep-e23bac6d.mjs';
import '../_chunks/dep-6d55d809.mjs';
import '../_common/js/global-config/default-config.mjs';
import '../_common/js/global-config/locale/zh_CN.mjs';
import '../config-provider/type.mjs';
import '../utils/easing.mjs';
import '../hooks/tnode.mjs';
import '../tooltip/util.mjs';
import '../tooltip/type.mjs';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !isVNode(s);
}
var localTBreadcrumbOrigin = {
  separator: "",
  theme: "light",
  slots: {
    separator: ""
  },
  maxItemWidth: void 0
};
var _BreadcrumbItem = defineComponent({
  name: "TBreadcrumbItem",
  props: _objectSpread({}, props),
  setup: function setup(props2, _ref) {
    var _localTBreadcrumb$slo;
    var slots = _ref.slots,
      attrs = _ref.attrs;
    var breadcrumbText = ref();
    var localTBreadcrumb = inject("tBreadcrumb", localTBreadcrumbOrigin);
    var themeClassName = ref(localTBreadcrumb === null || localTBreadcrumb === void 0 ? void 0 : localTBreadcrumb.theme);
    var isCutOff = ref(false);
    var COMPONENT_NAME = usePrefixClass("breadcrumb__item");
    var separatorClass = usePrefixClass("breadcrumb__separator");
    var disableClass = usePrefixClass("is-disabled");
    var linkClass = usePrefixClass("link");
    var maxLengthClass = usePrefixClass("breadcrumb__inner");
    var textFlowClass = usePrefixClass("breadcrumb--text-overflow");
    var _useGlobalIcon = useGlobalIcon({
        ChevronRightIcon: ChevronRightIcon
      }),
      ChevronRightIcon$1 = _useGlobalIcon.ChevronRightIcon;
    var maxWithStyle = computed(function () {
      var maxItemWidth = localTBreadcrumb === null || localTBreadcrumb === void 0 ? void 0 : localTBreadcrumb.maxItemWidth;
      var maxWith = props2.maxWidth || maxItemWidth || "120";
      return {
        maxWidth: "".concat(maxWith, "px")
      };
    });
    onMounted(function () {
      isCutOff.value = isNodeOverflow(breadcrumbText.value);
    });
    onBeforeUpdate(function () {
      isCutOff.value = isNodeOverflow(breadcrumbText.value);
    });
    var separatorPropContent = localTBreadcrumb === null || localTBreadcrumb === void 0 ? void 0 : localTBreadcrumb.separator;
    var separatorSlot = localTBreadcrumb === null || localTBreadcrumb === void 0 ? void 0 : (_localTBreadcrumb$slo = localTBreadcrumb.slots) === null || _localTBreadcrumb$slo === void 0 ? void 0 : _localTBreadcrumb$slo.separator;
    var separatorContent = separatorPropContent || separatorSlot || createVNode(ChevronRightIcon$1, {
      color: "rgba(0,0,0,.3)"
    }, null);
    var _getCurrentInstance = getCurrentInstance(),
      proxy = _getCurrentInstance.proxy;
    var bindEvent = function bindEvent(e) {
      if (!props2.disabled) {
        e.preventDefault();
        if (props2.href) {
          window.location.href = props2.href;
        }
        var router = props2.router || proxy.$root.$router;
        if (props2.to && router) {
          props2.replace ? router.replace(props2.to) : router.push(props2.to);
        }
      }
    };
    return function () {
      var itemClass = [COMPONENT_NAME.value, themeClassName.value];
      var textClass = [textFlowClass.value];
      if (props2.disabled) {
        textClass.push(disableClass.value);
      }
      var listeners = {
        onClick: function onClick(e) {
          var _props2$onClick;
          if (props2.disabled) {
            e.stopPropagation();
            return;
          }
          (_props2$onClick = props2.onClick) === null || _props2$onClick === void 0 ? void 0 : _props2$onClick.call(props2, {
            e: e
          });
        }
      };
      var textContent = createVNode("span", mergeProps({
        "ref": breadcrumbText
      }, {
        "class": maxLengthClass.value,
        style: maxWithStyle.value
      }), [slots["default"]()]);
      var itemContent = createVNode("span", _objectSpread({
        "class": textClass
      }, listeners), [textContent]);
      if ((props2.href || props2.to) && !props2.disabled) {
        textClass.push(linkClass.value);
        itemContent = createVNode("a", mergeProps({
          "class": textClass,
          "href": props2.href,
          "target": props2.target
        }, listeners, {
          "onClick": bindEvent
        }), [textContent]);
      }
      return createVNode("div", mergeProps({
        "class": itemClass
      }, attrs), [isCutOff.value ? createVNode(Tooltip, {
        "content": function content() {
          return slots === null || slots === void 0 ? void 0 : slots["default"]();
        }
      }, _isSlot(itemContent) ? itemContent : {
        "default": function _default() {
          return [itemContent];
        }
      }) : itemContent, createVNode("span", {
        "class": separatorClass.value
      }, [typeof separatorContent === "function" ? separatorContent() : separatorContent])]);
    };
  }
});

export { _BreadcrumbItem as default };
//# sourceMappingURL=breadcrumb-item.mjs.map
