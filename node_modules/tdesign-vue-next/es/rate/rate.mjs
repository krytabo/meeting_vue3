/**
 * tdesign v0.24.2
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _toConsumableArray } from '../_chunks/dep-cbaabd8b.mjs';
import { _ as _slicedToArray } from '../_chunks/dep-fc49c640.mjs';
import { _ as _defineProperty } from '../_chunks/dep-3cecb2d2.mjs';
import { defineComponent, toRefs, ref, computed, createVNode, Fragment } from 'vue';
import { StarFilledIcon } from 'tdesign-icons-vue-next';
import useVModel from '../hooks/useVModel.mjs';
import props from './props.mjs';
import '../hooks/useConfig.mjs';
import { useTNodeJSX } from '../hooks/tnode.mjs';
import { Tooltip } from '../tooltip/index.mjs';
import { useConfig } from '../config-provider/useConfig.mjs';
import '../_chunks/dep-33031998.mjs';
import '../_chunks/dep-71ce186a.mjs';
import '../_chunks/dep-ad7eea53.mjs';
import '../_chunks/dep-2022ae69.mjs';
import '../_chunks/dep-22081ace.mjs';
import '../_chunks/dep-f5995493.mjs';
import '../_chunks/dep-21468dc9.mjs';
import '../_chunks/dep-de110986.mjs';
import '../_chunks/dep-eede90e8.mjs';
import '../_chunks/dep-63f67da3.mjs';
import '../_chunks/dep-c5944b2d.mjs';
import '../_chunks/dep-a39da6ce.mjs';
import '../_chunks/dep-2517604a.mjs';
import '../_chunks/dep-7b441284.mjs';
import '../_chunks/dep-13628992.mjs';
import '../_chunks/dep-0510ab65.mjs';
import '../utils/render-tnode.mjs';
import '../_chunks/dep-f8038a0a.mjs';
import '../_chunks/dep-dcaa2bc6.mjs';
import '../_chunks/dep-1984c62f.mjs';
import '../_chunks/dep-cd44ef02.mjs';
import '../_chunks/dep-a537ee3e.mjs';
import '../_chunks/dep-8c2e57f5.mjs';
import '../_chunks/dep-f5b976b2.mjs';
import '../_chunks/dep-6ad4a916.mjs';
import '../_chunks/dep-e478235e.mjs';
import '../_chunks/dep-0cf2dc82.mjs';
import '../tooltip/tooltip.mjs';
import '../tooltip/props.mjs';
import '../popup/props.mjs';
import '../popup/index.mjs';
import '../popup/popup.mjs';
import '@popperjs/core';
import '../utils/dom.mjs';
import '../utils/easing.mjs';
import '../_common/js/utils/set-style.mjs';
import '../popup/container.mjs';
import '../utils/withInstall.mjs';
import './style/css.mjs';
import '../popup/type.mjs';
import '../_chunks/dep-a953bb61.mjs';
import '../_chunks/dep-b43427a8.mjs';
import '../_chunks/dep-cab779bd.mjs';
import '../_chunks/dep-d904f554.mjs';
import '../_chunks/dep-a6ebc045.mjs';
import '../_chunks/dep-6f8d8885.mjs';
import '../_chunks/dep-2e0d3d32.mjs';
import '../_chunks/dep-a8f3adf1.mjs';
import '../_chunks/dep-c692ab23.mjs';
import '../_chunks/dep-e23bac6d.mjs';
import '../_chunks/dep-6d55d809.mjs';
import '../_common/js/global-config/default-config.mjs';
import '../_common/js/global-config/locale/zh_CN.mjs';
import '../config-provider/type.mjs';
import '../tooltip/util.mjs';
import '../tooltip/type.mjs';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var _Rate = defineComponent({
  name: "TRate",
  props: _objectSpread({}, props),
  setup: function setup(props2, _ref) {
    var slots = _ref.slots;
    var renderTNodeJSX = useTNodeJSX();
    var activeColor = Array.isArray(props2.color) ? props2.color[0] : props2.color;
    var defaultColor = Array.isArray(props2.color) ? props2.color[1] : "var(--td-bg-color-component)";
    var _toRefs = toRefs(props2),
      inputValue = _toRefs.value,
      modelValue = _toRefs.modelValue;
    var _useVModel = useVModel(inputValue, modelValue, props2.defaultValue, props2.onChange),
      _useVModel2 = _slicedToArray(_useVModel, 2),
      starValue = _useVModel2[0],
      setStarValue = _useVModel2[1];
    var hoverValue = ref(void 0);
    var root = ref();
    var displayValue = computed(function () {
      return Number(hoverValue.value || starValue.value);
    });
    var displayText = computed(function () {
      return props2.texts.length === 0 ? ["\u6781\u5DEE", "\u5931\u671B", "\u4E00\u822C", "\u6EE1\u610F", "\u60CA\u559C"] : props2.texts;
    });
    var RateIcon = function RateIcon(iconProps) {
      if (slots.icon !== void 0) {
        return renderTNodeJSX("icon", {
          params: iconProps
        });
      }
      return createVNode(StarFilledIcon, iconProps, null);
    };
    var getStarValue = function getStarValue(event, index) {
      if (props2.allowHalf) {
        var _root$value$getBoundi = root.value.getBoundingClientRect(),
          left = _root$value$getBoundi.left;
        var firstStar = root.value.firstChild.nextSibling;
        var _firstStar$getBoundin = firstStar.getBoundingClientRect(),
          width = _firstStar$getBoundin.width;
        var clientX = event.clientX;
        var starMiddle = width * (index - 0.5) + props2.gap * (index - 1);
        if (clientX - left >= starMiddle) return index;
        if (clientX - left < starMiddle) return index - 0.5;
      }
      return index;
    };
    var mouseEnterHandler = function mouseEnterHandler(event, index) {
      if (props2.disabled) return;
      hoverValue.value = getStarValue(event, index);
    };
    var mouseLeaveHandler = function mouseLeaveHandler() {
      if (props2.disabled) return;
      hoverValue.value = void 0;
    };
    var clickHandler = function clickHandler(event, index) {
      if (props2.disabled) return;
      setStarValue(getStarValue(event, index));
    };
    var getStarCls = function getStarCls(index) {
      if (props2.allowHalf && index + 0.5 === displayValue.value) return "".concat(classPrefix.value, "-rate__item--half");
      if (index >= displayValue.value) return "";
      if (index < displayValue.value) return "".concat(classPrefix.value, "-rate__item--full");
    };
    var _useConfig = useConfig("classPrefix"),
      classPrefix = _useConfig.classPrefix;
    return function () {
      return createVNode("div", {
        "class": "".concat(classPrefix.value, "-rate"),
        "onMouseleave": mouseLeaveHandler
      }, [createVNode("ul", {
        "class": "".concat(classPrefix.value, "-rate__list"),
        "style": {
          gap: "".concat(props2.gap, "px")
        },
        "ref": root
      }, [_toConsumableArray(Array(Number(props2.count))).map(function (_, index) {
        return createVNode("li", {
          "key": index,
          "class": ["".concat(classPrefix.value, "-rate__item"), getStarCls(index)],
          "onClick": function onClick(event) {
            return clickHandler(event, index + 1);
          },
          "onMousemove": function onMousemove(event) {
            return mouseEnterHandler(event, index + 1);
          }
        }, [props2.showText ? createVNode(Tooltip, {
          "key": index,
          "content": displayText.value[displayValue.value - 1]
        }, {
          "default": function _default() {
            return [createVNode("div", {
              "class": "".concat(classPrefix.value, "-rate__star-top")
            }, [createVNode(RateIcon, {
              "size": props2.size,
              "color": activeColor
            }, null)]), createVNode("div", {
              "class": "".concat(classPrefix.value, "-rate__star-bottom")
            }, [createVNode(RateIcon, {
              "size": props2.size,
              "color": defaultColor
            }, null)])];
          }
        }) : createVNode(Fragment, null, [createVNode("div", {
          "class": "".concat(classPrefix.value, "-rate__star-top")
        }, [createVNode(RateIcon, {
          "size": props2.size,
          "color": activeColor
        }, null)]), createVNode("div", {
          "class": "".concat(classPrefix.value, "-rate__star-bottom")
        }, [createVNode(RateIcon, {
          "size": props2.size,
          "color": defaultColor
        }, null)])])]);
      })]), props2.showText && createVNode("div", {
        "className": "".concat(classPrefix.value, "-rate__text")
      }, [displayText.value[displayValue.value - 1]])]);
    };
  }
});

export { _Rate as default };
//# sourceMappingURL=rate.mjs.map
