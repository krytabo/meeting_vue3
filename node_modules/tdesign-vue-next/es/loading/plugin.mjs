/**
 * tdesign v0.24.2
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-3cecb2d2.mjs';
import { defineComponent, reactive, h, createApp } from 'vue';
import _Loading from './loading.mjs';
import { getAttach, addClass, removeClass } from '../utils/dom.mjs';
import { usePrefixClass } from '../hooks/useConfig.mjs';
import '../_chunks/dep-fc49c640.mjs';
import '../_chunks/dep-33031998.mjs';
import './icon/gradient.mjs';
import '../_common/js/loading/circle-adapter.mjs';
import '../_common/js/utils/set-style.mjs';
import '../_common/js/utils/helper.mjs';
import '../_chunks/dep-cbaabd8b.mjs';
import '../_chunks/dep-d52a3086.mjs';
import '../utils/render-tnode.mjs';
import '../_chunks/dep-f8038a0a.mjs';
import '../_chunks/dep-ad7eea53.mjs';
import '../_chunks/dep-dcaa2bc6.mjs';
import '../_chunks/dep-1984c62f.mjs';
import '../_chunks/dep-f5995493.mjs';
import '../_chunks/dep-21468dc9.mjs';
import '../_chunks/dep-cd44ef02.mjs';
import '../_chunks/dep-63f67da3.mjs';
import '../_chunks/dep-a537ee3e.mjs';
import '../_chunks/dep-8c2e57f5.mjs';
import '../_chunks/dep-c5944b2d.mjs';
import '../_chunks/dep-a39da6ce.mjs';
import '../_chunks/dep-f5b976b2.mjs';
import '../_chunks/dep-6ad4a916.mjs';
import '../_chunks/dep-de110986.mjs';
import '../_chunks/dep-e478235e.mjs';
import '../_chunks/dep-0cf2dc82.mjs';
import '../_chunks/dep-2517604a.mjs';
import '../_chunks/dep-22081ace.mjs';
import '../_chunks/dep-eede90e8.mjs';
import '../_chunks/dep-7b441284.mjs';
import '../_chunks/dep-13628992.mjs';
import '../_chunks/dep-0510ab65.mjs';
import '../_chunks/dep-2022ae69.mjs';
import '../_chunks/dep-71ce186a.mjs';
import '../utils/transfer-dom.mjs';
import './props.mjs';
import '../utils/easing.mjs';
import '../config-provider/useConfig.mjs';
import '../_chunks/dep-a953bb61.mjs';
import '../_chunks/dep-b43427a8.mjs';
import '../_chunks/dep-cab779bd.mjs';
import '../_chunks/dep-d904f554.mjs';
import '../_chunks/dep-a6ebc045.mjs';
import '../_chunks/dep-6f8d8885.mjs';
import '../_chunks/dep-2e0d3d32.mjs';
import '../_chunks/dep-a8f3adf1.mjs';
import '../_chunks/dep-c692ab23.mjs';
import '../_chunks/dep-e23bac6d.mjs';
import '../_chunks/dep-6d55d809.mjs';
import '../_common/js/global-config/default-config.mjs';
import '../_common/js/global-config/locale/zh_CN.mjs';
import '../config-provider/type.mjs';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var fullScreenLoadingInstance = null;
function createLoading(props) {
  var component = defineComponent({
    setup: function setup() {
      var loadingOptions = reactive(props);
      return {
        loadingOptions: loadingOptions
      };
    },
    render: function render() {
      return h(_Loading, _objectSpread({}, this.loadingOptions));
    }
  });
  var attach = getAttach(props.attach);
  var loading = createApp(component).mount(document.createElement("div"));
  var parentRelativeClass = usePrefixClass("loading__parent--relative").value;
  if (attach) {
    attach.appendChild(loading.$el);
    addClass(attach, parentRelativeClass);
  } else {
    console.error("attach is not exist");
  }
  var loadingInstance = {
    hide: function hide() {
      loading.loading = false;
      loading.$el.parentNode.removeChild(loading.$el);
      removeClass(attach, parentRelativeClass);
    }
  };
  return loadingInstance;
}
function produceLoading(props) {
  var lockClass = usePrefixClass("loading--lock");
  if (props === true) {
    fullScreenLoadingInstance = createLoading({
      fullscreen: true,
      loading: true,
      attach: "body"
    });
    return fullScreenLoadingInstance;
  }
  removeClass(document.body, lockClass.value);
  if (props === false) {
    removeClass(document.body, lockClass.value);
    fullScreenLoadingInstance.hide();
    fullScreenLoadingInstance = null;
    return;
  }
  return createLoading(props);
}
var LoadingPlugin = produceLoading;
LoadingPlugin.install = function (app) {
  app.config.globalProperties.$loading = produceLoading;
};

export { LoadingPlugin as default };
//# sourceMappingURL=plugin.mjs.map
