/**
 * tdesign v0.24.2
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _toConsumableArray } from '../../_chunks/dep-cbaabd8b.mjs';
import { _ as _defineProperty } from '../../_chunks/dep-3cecb2d2.mjs';
import { _ as _slicedToArray } from '../../_chunks/dep-fc49c640.mjs';
import { toRefs, ref, computed, createVNode, mergeProps } from 'vue';
import { i as isFunction_1 } from '../../_chunks/dep-c5944b2d.mjs';
import SorterButton from '../sorter-button.mjs';
import useDefaultValue from '../../hooks/useDefaultValue.mjs';
import '../../_chunks/dep-33031998.mjs';
import '../../_chunks/dep-ad7eea53.mjs';
import '../../_chunks/dep-f5995493.mjs';
import '../../_chunks/dep-21468dc9.mjs';
import '../../_chunks/dep-a39da6ce.mjs';
import 'tdesign-icons-vue-next';
import './useClassName.mjs';
import '../../hooks/useConfig.mjs';
import '../../config-provider/useConfig.mjs';
import '../../_chunks/dep-a953bb61.mjs';
import '../../_chunks/dep-b43427a8.mjs';
import '../../_chunks/dep-cab779bd.mjs';
import '../../_chunks/dep-8c2e57f5.mjs';
import '../../_chunks/dep-f5b976b2.mjs';
import '../../_chunks/dep-d904f554.mjs';
import '../../_chunks/dep-1984c62f.mjs';
import '../../_chunks/dep-cd44ef02.mjs';
import '../../_chunks/dep-63f67da3.mjs';
import '../../_chunks/dep-a537ee3e.mjs';
import '../../_chunks/dep-a6ebc045.mjs';
import '../../_chunks/dep-6f8d8885.mjs';
import '../../_chunks/dep-6ad4a916.mjs';
import '../../_chunks/dep-de110986.mjs';
import '../../_chunks/dep-2e0d3d32.mjs';
import '../../_chunks/dep-e478235e.mjs';
import '../../_chunks/dep-a8f3adf1.mjs';
import '../../_chunks/dep-c692ab23.mjs';
import '../../_chunks/dep-e23bac6d.mjs';
import '../../_chunks/dep-6d55d809.mjs';
import '../../_common/js/global-config/default-config.mjs';
import '../../_common/js/global-config/locale/zh_CN.mjs';
import '../../config-provider/type.mjs';
import '../../tooltip/index.mjs';
import '../../tooltip/tooltip.mjs';
import '../../tooltip/props.mjs';
import '../../popup/props.mjs';
import '../../popup/index.mjs';
import '../../popup/popup.mjs';
import '@popperjs/core';
import '../../utils/dom.mjs';
import '../../_chunks/dep-0cf2dc82.mjs';
import '../../utils/easing.mjs';
import '../../utils/render-tnode.mjs';
import '../../_chunks/dep-f8038a0a.mjs';
import '../../_chunks/dep-dcaa2bc6.mjs';
import '../../_chunks/dep-2517604a.mjs';
import '../../_chunks/dep-22081ace.mjs';
import '../../_chunks/dep-eede90e8.mjs';
import '../../_chunks/dep-7b441284.mjs';
import '../../_chunks/dep-13628992.mjs';
import '../../_chunks/dep-0510ab65.mjs';
import '../../_chunks/dep-2022ae69.mjs';
import '../../_chunks/dep-71ce186a.mjs';
import '../../_common/js/utils/set-style.mjs';
import '../../popup/container.mjs';
import '../../hooks/useVModel.mjs';
import '../../utils/withInstall.mjs';
import './style/css.mjs';
import '../../popup/type.mjs';
import '../../hooks/tnode.mjs';
import '../../tooltip/util.mjs';
import '../../tooltip/type.mjs';
import '../../hooks/useGlobalIcon.mjs';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function useSorter(props, _ref) {
  var emit = _ref.emit,
    slots = _ref.slots;
  var _toRefs = toRefs(props),
    sort = _toRefs.sort,
    data = _toRefs.data;
  var originalData = ref();
  var _useDefaultValue = useDefaultValue(sort, props.defaultSort, props.onSortChange, "sort"),
    _useDefaultValue2 = _slicedToArray(_useDefaultValue, 2),
    tSortInfo = _useDefaultValue2[0],
    setTSortInfo = _useDefaultValue2[1];
  var _useDefaultValue3 = useDefaultValue(data, [], props.onDataChange, "data"),
    _useDefaultValue4 = _slicedToArray(_useDefaultValue3, 2),
    tData = _useDefaultValue4[0],
    setTData = _useDefaultValue4[1];
  var sorterFuncMap = computed(function () {
    return getSorterFuncMap(props.columns);
  });
  var sortArray = computed(function () {
    var sort2 = tSortInfo.value;
    if (!sort2) return [];
    return Array.isArray(sort2) ? sort2 : [sort2];
  });
  var sortMap = computed(function () {
    var sortMap2 = {};
    sortArray.value.forEach(function (info, index) {
      var sortBy = info.sortBy;
      sortMap2[sortBy] = _objectSpread({
        index: index
      }, info);
    });
    return sortMap2;
  });
  function getSorterFuncMap(columns) {
    var map = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    for (var i = 0, len = columns.length; i < len; i++) {
      var _col$children;
      var col = columns[i];
      if (isFunction_1(col.sorter)) {
        map[col.colKey] = col.sorter;
      }
      if ((_col$children = col.children) !== null && _col$children !== void 0 && _col$children.length) {
        getSorterFuncMap(col.children, map);
      }
    }
    return map;
  }
  function handleDataSort(sortInfo) {
    var sort2 = sortInfo;
    if (!Object.keys(sorterFuncMap.value).length) return;
    if (!originalData.value) {
      originalData.value = tData.value;
    }
    var isEmptyArraySort = !sort2 || sort2 instanceof Array && !sort2.length;
    var isEmptyObjectSort = !(sort2 instanceof Array) && !(sort2 !== null && sort2 !== void 0 && sort2.sortBy);
    if (isEmptyArraySort || isEmptyObjectSort) {
      setTData(originalData.value, {
        trigger: "sort"
      });
      return originalData.value;
    }
    var formatedSort = sort2 instanceof Array ? sort2 : [sort2];
    var newData = tData.value.slice().sort(function (a, b) {
      var sortResult = 0;
      for (var i = 0, len = formatedSort.length; i < len; i++) {
        var item = formatedSort[i];
        var sortFunc = sorterFuncMap.value[item.sortBy];
        if (sortResult === 0 && sortFunc) {
          sortResult = item.descending ? sortFunc(b, a) : sortFunc(a, b);
        } else {
          break;
        }
      }
      return sortResult;
    });
    if (JSON.stringify(newData) === JSON.stringify(tData.value)) return;
    setTData(newData, {
      trigger: "sort"
    });
    return newData;
  }
  function handleSortHeaderClick(col, p) {
    var _props$onChange;
    var sortInfo;
    if (props.multipleSort) {
      sortInfo = getMultipleNextSort(col, p);
    } else {
      var sort2 = tSortInfo.value instanceof Array ? tSortInfo.value[0] : tSortInfo.value;
      sortInfo = getSingleNextSort(col, sort2, p);
    }
    var newData = handleDataSort(sortInfo);
    var currentData = newData || tData.value;
    var currentDataSource = currentData;
    setTSortInfo(sortInfo, {
      currentDataSource: currentDataSource,
      col: col
    });
    (_props$onChange = props.onChange) === null || _props$onChange === void 0 ? void 0 : _props$onChange.call(props, {
      sorter: sortInfo
    }, {
      currentData: currentData,
      trigger: "sorter"
    });
  }
  function getSortOrder(descending) {
    if (descending === void 0) return;
    return descending ? "desc" : "asc";
  }
  function getSingleNextSort(col, sortInfo, p) {
    if (sortInfo && sortInfo.sortBy === col.colKey && sortInfo.descending === p.descending) {
      return void 0;
    }
    return {
      sortBy: col.colKey,
      descending: p.descending
    };
  }
  function getMultipleNextSort(col, p) {
    var sort2 = tSortInfo.value;
    if (!(sort2 instanceof Array)) return;
    var colKey = col.colKey;
    var result = _toConsumableArray(sort2);
    for (var i = 0, len = sort2.length; i < len; i++) {
      if (sort2[i].sortBy === colKey) {
        var next = getSingleNextSort(col, sort2[i], p);
        next ? result[i] = next : result.splice(i, 1);
        return result;
      }
    }
    result.push({
      sortBy: colKey,
      descending: p.descending
    });
    return result;
  }
  function renderSortIcon(_ref2) {
    var _sortMap$value$col$co;
    var col = _ref2.col;
    if (!col.sorter) return null;
    var sorterButtonsProps = {
      sortType: col.sortType,
      sortOrder: getSortOrder((_sortMap$value$col$co = sortMap.value[col.colKey]) === null || _sortMap$value$col$co === void 0 ? void 0 : _sortMap$value$col$co.descending),
      sortIcon: props.sortIcon,
      hideSortTips: props.hideSortTips
    };
    return createVNode(SorterButton, mergeProps(sorterButtonsProps, {
      "onSortIconClick": function onSortIconClick(_, p) {
        return handleSortHeaderClick(col, p);
      }
    }), {
      sortIcon: slots.sortIcon
    });
  }
  return {
    renderSortIcon: renderSortIcon
  };
}

export { useSorter as default };
//# sourceMappingURL=useSorter.mjs.map
