/**
 * tdesign v0.24.2
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _typeof } from '../../_chunks/dep-21468dc9.mjs';
import { _ as _slicedToArray } from '../../_chunks/dep-fc49c640.mjs';
import { _ as _defineProperty } from '../../_chunks/dep-3cecb2d2.mjs';
import { isVNode, h, computed, createVNode } from 'vue';
import { i as isString_1 } from '../../_chunks/dep-0cf2dc82.mjs';
import { i as isFunction_1 } from '../../_chunks/dep-c5944b2d.mjs';
import { getThRowspanAndColspan, getThList } from './useMultiHeader.mjs';
import useClassName from './useClassName.mjs';
import TEllipsis from '../ellipsis.mjs';
import '../../_chunks/dep-33031998.mjs';
import '../../_chunks/dep-ad7eea53.mjs';
import '../../_chunks/dep-f5995493.mjs';
import '../../_chunks/dep-de110986.mjs';
import '../../_chunks/dep-63f67da3.mjs';
import '../../_chunks/dep-a39da6ce.mjs';
import '../../hooks/useConfig.mjs';
import '../../config-provider/useConfig.mjs';
import '../../_chunks/dep-a953bb61.mjs';
import '../../_chunks/dep-b43427a8.mjs';
import '../../_chunks/dep-cab779bd.mjs';
import '../../_chunks/dep-8c2e57f5.mjs';
import '../../_chunks/dep-f5b976b2.mjs';
import '../../_chunks/dep-d904f554.mjs';
import '../../_chunks/dep-1984c62f.mjs';
import '../../_chunks/dep-cd44ef02.mjs';
import '../../_chunks/dep-a537ee3e.mjs';
import '../../_chunks/dep-a6ebc045.mjs';
import '../../_chunks/dep-6f8d8885.mjs';
import '../../_chunks/dep-6ad4a916.mjs';
import '../../_chunks/dep-2e0d3d32.mjs';
import '../../_chunks/dep-e478235e.mjs';
import '../../_chunks/dep-a8f3adf1.mjs';
import '../../_chunks/dep-c692ab23.mjs';
import '../../_chunks/dep-e23bac6d.mjs';
import '../../_chunks/dep-6d55d809.mjs';
import '../../_common/js/global-config/default-config.mjs';
import '../../_common/js/global-config/locale/zh_CN.mjs';
import '../../config-provider/type.mjs';
import '../../_chunks/dep-bd52eb06.mjs';
import '../../_chunks/dep-41ea6045.mjs';
import '../../_chunks/dep-eede90e8.mjs';
import '../../utils/render-tnode.mjs';
import '../../_chunks/dep-f8038a0a.mjs';
import '../../_chunks/dep-dcaa2bc6.mjs';
import '../../_chunks/dep-2517604a.mjs';
import '../../_chunks/dep-22081ace.mjs';
import '../../_chunks/dep-7b441284.mjs';
import '../../_chunks/dep-13628992.mjs';
import '../../_chunks/dep-0510ab65.mjs';
import '../../_chunks/dep-2022ae69.mjs';
import '../../_chunks/dep-71ce186a.mjs';
import '../../utils/dom.mjs';
import '../../utils/easing.mjs';
import '../../tooltip/index.mjs';
import '../../tooltip/tooltip.mjs';
import '../../tooltip/props.mjs';
import '../../popup/props.mjs';
import '../../popup/index.mjs';
import '../../popup/popup.mjs';
import '@popperjs/core';
import '../../_common/js/utils/set-style.mjs';
import '../../popup/container.mjs';
import '../../_chunks/dep-cbaabd8b.mjs';
import '../../hooks/useVModel.mjs';
import '../../utils/withInstall.mjs';
import './style/css.mjs';
import '../../popup/type.mjs';
import '../../hooks/tnode.mjs';
import '../../tooltip/util.mjs';
import '../../tooltip/type.mjs';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !isVNode(s);
}
function renderTitle(slots, col, index) {
  var params = {
    col: col,
    colIndex: index
  };
  if (isFunction_1(col.title)) {
    return col.title(h, params);
  }
  if (isString_1(col.title) && slots[col.title]) {
    return slots[col.title](params);
  }
  if (isFunction_1(col.render)) {
    return col.render(h, _objectSpread(_objectSpread({}, params), {}, {
      type: "title",
      row: {},
      rowIndex: -1
    })) || col.title;
  }
  return col.title;
}
function useTableHeader(props) {
  var _useClassName = useClassName(),
    tableSortClasses = _useClassName.tableSortClasses,
    tableFilterClasses = _useClassName.tableFilterClasses;
  var spansAndLeafNodes = computed(function () {
    return getThRowspanAndColspan(props.columns);
  });
  var thList = computed(function () {
    return getThList(props.columns);
  });
  var isMultipleHeader = computed(function () {
    return thList.value.length > 1;
  });
  var renderTitleWidthIcon = function renderTitleWidthIcon(_ref, col, colIndex, ellipsisTitle, attach, extra) {
    var _classes;
    var _ref2 = _slicedToArray(_ref, 3),
      title = _ref2[0],
      sortIcon = _ref2[1],
      filterIcon = _ref2[2];
    var classes = (_classes = {}, _defineProperty(_classes, tableSortClasses.sortable, sortIcon), _defineProperty(_classes, tableFilterClasses.filterable, filterIcon), _classes);
    var content = isFunction_1(ellipsisTitle) ? ellipsisTitle(h, {
      col: col,
      colIndex: colIndex
    }) : void 0;
    var isEllipsis = ellipsisTitle !== void 0 ? Boolean(ellipsisTitle) : Boolean(col.ellipsis);
    return createVNode("div", {
      "class": classes
    }, [createVNode("div", {
      "class": tableSortClasses.title
    }, [isEllipsis ? createVNode(TEllipsis, {
      "placement": "bottom",
      "attach": attach ? function () {
        return attach;
      } : void 0,
      "tooltipContent": content && function () {
        return content;
      },
      "tooltipProps": _typeof(ellipsisTitle) === "object" ? ellipsisTitle : void 0,
      "classPrefix": extra === null || extra === void 0 ? void 0 : extra.classPrefix,
      "overlayClassName": extra === null || extra === void 0 ? void 0 : extra.ellipsisOverlayClassName
    }, _isSlot(title) ? title : {
      "default": function _default() {
        return [title];
      }
    }) : createVNode("div", null, [title]), Boolean(sortIcon || filterIcon) && createVNode("div", {
      "class": tableFilterClasses.iconWrap
    }, [sortIcon, filterIcon])])]);
  };
  return {
    thList: thList,
    isMultipleHeader: isMultipleHeader,
    spansAndLeafNodes: spansAndLeafNodes,
    renderTitleWidthIcon: renderTitleWidthIcon
  };
}

export { useTableHeader as default, renderTitle };
//# sourceMappingURL=useTableHeader.mjs.map
