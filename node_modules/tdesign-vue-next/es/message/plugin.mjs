/**
 * tdesign v0.24.2
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _typeof } from '../_chunks/dep-21468dc9.mjs';
import { _ as _defineProperty } from '../_chunks/dep-3cecb2d2.mjs';
import { createApp, nextTick } from 'vue';
import { DEFAULT_Z_INDEX, MessageList } from './messageList.mjs';
import { getAttach } from '../utils/dom.mjs';
import './const.mjs';
import './message.mjs';
import 'tdesign-icons-vue-next';
import '../loading/index.mjs';
import '../loading/directive.mjs';
import '../loading/plugin.mjs';
import '../loading/loading.mjs';
import '../_chunks/dep-fc49c640.mjs';
import '../_chunks/dep-33031998.mjs';
import '../loading/icon/gradient.mjs';
import '../_common/js/loading/circle-adapter.mjs';
import '../_common/js/utils/set-style.mjs';
import '../_common/js/utils/helper.mjs';
import '../_chunks/dep-cbaabd8b.mjs';
import '../_chunks/dep-d52a3086.mjs';
import '../hooks/useConfig.mjs';
import '../config-provider/useConfig.mjs';
import '../_chunks/dep-a953bb61.mjs';
import '../_chunks/dep-ad7eea53.mjs';
import '../_chunks/dep-b43427a8.mjs';
import '../_chunks/dep-cab779bd.mjs';
import '../_chunks/dep-8c2e57f5.mjs';
import '../_chunks/dep-c5944b2d.mjs';
import '../_chunks/dep-f5995493.mjs';
import '../_chunks/dep-a39da6ce.mjs';
import '../_chunks/dep-f5b976b2.mjs';
import '../_chunks/dep-d904f554.mjs';
import '../_chunks/dep-1984c62f.mjs';
import '../_chunks/dep-cd44ef02.mjs';
import '../_chunks/dep-63f67da3.mjs';
import '../_chunks/dep-a537ee3e.mjs';
import '../_chunks/dep-a6ebc045.mjs';
import '../_chunks/dep-6f8d8885.mjs';
import '../_chunks/dep-6ad4a916.mjs';
import '../_chunks/dep-de110986.mjs';
import '../_chunks/dep-2e0d3d32.mjs';
import '../_chunks/dep-e478235e.mjs';
import '../_chunks/dep-a8f3adf1.mjs';
import '../_chunks/dep-c692ab23.mjs';
import '../_chunks/dep-e23bac6d.mjs';
import '../_chunks/dep-6d55d809.mjs';
import '../_common/js/global-config/default-config.mjs';
import '../_common/js/global-config/locale/zh_CN.mjs';
import '../config-provider/type.mjs';
import '../utils/render-tnode.mjs';
import '../_chunks/dep-f8038a0a.mjs';
import '../_chunks/dep-dcaa2bc6.mjs';
import '../_chunks/dep-0cf2dc82.mjs';
import '../_chunks/dep-2517604a.mjs';
import '../_chunks/dep-22081ace.mjs';
import '../_chunks/dep-eede90e8.mjs';
import '../_chunks/dep-7b441284.mjs';
import '../_chunks/dep-13628992.mjs';
import '../_chunks/dep-0510ab65.mjs';
import '../_chunks/dep-2022ae69.mjs';
import '../_chunks/dep-71ce186a.mjs';
import '../utils/transfer-dom.mjs';
import '../loading/props.mjs';
import '../utils/easing.mjs';
import '../utils/withInstall.mjs';
import './style/css.mjs';
import '../loading/type.mjs';
import './props.mjs';
import '../hooks/useGlobalIcon.mjs';
import './animation.mjs';
import '../hooks/tnode.mjs';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var instanceMap = /* @__PURE__ */new Map();
function handleParams(params) {
  var options = _objectSpread({
    duration: 3e3,
    attach: "body",
    zIndex: DEFAULT_Z_INDEX,
    placement: "top"
  }, params);
  options.content = params.content;
  return options;
}
var MessageFunction = function MessageFunction(props) {
  var options = handleParams(props);
  var attach = options.attach,
    placement = options.placement;
  var attachDom = getAttach(attach);
  if (!instanceMap.get(attachDom)) {
    instanceMap.set(attachDom, {});
  }
  var p = instanceMap.get(attachDom)[placement];
  if (!p) {
    var wrapper = document.createElement("div");
    var instance = createApp(MessageList, {
      zIndex: options.zIndex,
      placement: options.placement
    }).mount(wrapper);
    instance.add(options);
    instanceMap.get(attachDom)[placement] = instance;
    attachDom.appendChild(wrapper);
  } else {
    p.add(options);
  }
  return new Promise(function (resolve) {
    var ins = instanceMap.get(attachDom)[placement];
    nextTick(function () {
      var msg = ins.messageList;
      resolve(msg[msg.length - 1]);
    });
  });
};
var showThemeMessage = function showThemeMessage(theme, params, duration) {
  var options = {
    theme: theme
  };
  if (typeof params === "string") {
    options.content = params;
  } else if (_typeof(params) === "object" && !(params instanceof Array)) {
    options = _objectSpread(_objectSpread({}, options), params);
  }
  (duration || duration === 0) && (options.duration = duration);
  return MessageFunction(options);
};
var extraApi = {
  info: function info(params, duration) {
    return showThemeMessage("info", params, duration);
  },
  success: function success(params, duration) {
    return showThemeMessage("success", params, duration);
  },
  warning: function warning(params, duration) {
    return showThemeMessage("warning", params, duration);
  },
  error: function error(params, duration) {
    return showThemeMessage("error", params, duration);
  },
  question: function question(params, duration) {
    return showThemeMessage("question", params, duration);
  },
  loading: function loading(params, duration) {
    return showThemeMessage("loading", params, duration);
  },
  close: function close(promise) {
    promise.then(function (instance) {
      return instance.close();
    });
  },
  closeAll: function closeAll() {
    if (instanceMap instanceof Map) {
      instanceMap.forEach(function (attach) {
        Object.keys(attach).forEach(function (placement) {
          var instance = attach[placement];
          instance.list = [];
        });
      });
    }
  }
};
var MessagePlugin = showThemeMessage;
MessagePlugin.install = function (app) {
  app.config.globalProperties.$message = showThemeMessage;
  Object.keys(extraApi).forEach(function (funcName) {
    app.config.globalProperties.$message[funcName] = extraApi[funcName];
  });
};
Object.keys(extraApi).forEach(function (funcName) {
  MessagePlugin[funcName] = extraApi[funcName];
});

export { MessagePlugin as default };
//# sourceMappingURL=plugin.mjs.map
