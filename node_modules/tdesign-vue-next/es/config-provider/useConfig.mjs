/**
 * tdesign v0.24.2
 * (c) 2022 tdesign
 * @license MIT
 */

import { inject, computed, h } from 'vue';
import { c as configProviderInjectKey, d as defaultGlobalConfig } from '../_chunks/dep-a953bb61.mjs';
import './type.mjs';
import '../_chunks/dep-ad7eea53.mjs';
import '../_chunks/dep-b43427a8.mjs';
import '../_chunks/dep-cab779bd.mjs';
import '../_chunks/dep-8c2e57f5.mjs';
import '../_chunks/dep-c5944b2d.mjs';
import '../_chunks/dep-f5995493.mjs';
import '../_chunks/dep-21468dc9.mjs';
import '../_chunks/dep-a39da6ce.mjs';
import '../_chunks/dep-f5b976b2.mjs';
import '../_chunks/dep-d904f554.mjs';
import '../_chunks/dep-1984c62f.mjs';
import '../_chunks/dep-cd44ef02.mjs';
import '../_chunks/dep-63f67da3.mjs';
import '../_chunks/dep-a537ee3e.mjs';
import '../_chunks/dep-a6ebc045.mjs';
import '../_chunks/dep-6f8d8885.mjs';
import '../_chunks/dep-6ad4a916.mjs';
import '../_chunks/dep-de110986.mjs';
import '../_chunks/dep-2e0d3d32.mjs';
import '../_chunks/dep-e478235e.mjs';
import '../_chunks/dep-a8f3adf1.mjs';
import '../_chunks/dep-c692ab23.mjs';
import '../_chunks/dep-e23bac6d.mjs';
import '../_chunks/dep-6d55d809.mjs';
import '../_common/js/global-config/default-config.mjs';
import '../_common/js/global-config/locale/zh_CN.mjs';

function useConfig(componentName) {
  var injectGlobalConfig = inject(configProviderInjectKey, null);
  var mergedGlobalConfig = computed(function () {
    return (injectGlobalConfig === null || injectGlobalConfig === void 0 ? void 0 : injectGlobalConfig.value) || defaultGlobalConfig;
  });
  var globalConfig = computed(function () {
    return mergedGlobalConfig.value[componentName];
  });
  var classPrefix = computed(function () {
    return mergedGlobalConfig.value.classPrefix;
  });
  var t = function t(pattern) {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }
    var data = args[0];
    if (typeof pattern === "string") {
      if (!data) return pattern;
      var regular = /\{\s*([\w-]+)\s*\}/g;
      var translated = pattern.replace(regular, function (match, key) {
        if (data) {
          return String(data[key]);
        }
        return "";
      });
      return translated;
    }
    if (typeof pattern === "function") {
      if (!args.length) return pattern(h);
      return pattern.apply(void 0, args);
    }
    return "";
  };
  return {
    t: t,
    globalConfig: globalConfig,
    classPrefix: classPrefix
  };
}

export { useConfig };
//# sourceMappingURL=useConfig.mjs.map
