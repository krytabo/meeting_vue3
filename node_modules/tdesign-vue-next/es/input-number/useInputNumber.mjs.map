{"version":3,"file":"useInputNumber.mjs","sources":["../../src/input-number/useInputNumber.tsx"],"sourcesContent":["import { computed, onMounted, ref, toRefs, watch } from 'vue';\nimport useCommonClassName from '../hooks/useCommonClassName';\nimport useVModel from '../hooks/useVModel';\nimport { InputNumberValue, TdInputNumberProps } from './type';\n// 计算逻辑，统一到 common 中，方便各框架复用（如超过 16 位的大数处理）\nimport {\n  canAddNumber,\n  canInputNumber,\n  canReduceNumber,\n  formatToNumber,\n  getMaxOrMinValidateResult,\n  getStepValue,\n} from '../_common/js/input-number/number';\nimport { useFormDisabled } from '../form/hooks';\n\n/**\n * 独立一个组件 Hook 方便用户直接使用相关逻辑 自定义任何样式的数字输入框\n */\nexport default function useInputNumber(props: TdInputNumberProps) {\n  const { classPrefix, sizeClassNames, statusClassNames } = useCommonClassName();\n  const { value, modelValue, max, min } = toRefs(props);\n  // 统一处理受控、非受控、语法糖 v-model 等\n  const [tValue, setTValue] = useVModel(value, modelValue, props.defaultValue, props.onChange);\n  const inputRef = ref();\n  const userInput = ref('');\n  const displayValue = ref();\n\n  const tDisabled = useFormDisabled();\n\n  const isError = ref<'exceed-maximum' | 'below-minimum'>();\n\n  const disabledReduce = computed(\n    () => tDisabled.value || !canReduceNumber(tValue.value, props.min, props.largeNumber),\n  );\n\n  const disabledAdd = computed(() => tDisabled.value || !canAddNumber(tValue.value, props.max, props.largeNumber));\n\n  const wrapClasses = computed(() => [\n    `${classPrefix.value}-input-number`,\n    sizeClassNames[props.size],\n    {\n      [statusClassNames.disabled]: tDisabled.value,\n      [`${classPrefix.value}-is-controls-right`]: props.theme === 'column',\n      [`${classPrefix.value}-input-number--${props.theme}`]: props.theme,\n      [`${classPrefix.value}-input-number--auto-width`]: props.autoWidth,\n    },\n  ]);\n\n  const reduceClasses = computed(() => [\n    `${classPrefix.value}-input-number__decrease`,\n    { [statusClassNames.disabled]: disabledReduce.value },\n  ]);\n\n  const addClasses = computed(() => [\n    `${classPrefix.value}-input-number__increase`,\n    { [statusClassNames.disabled]: disabledAdd.value },\n  ]);\n\n  const getUserInput = (value: InputNumberValue) => {\n    if (!value && value !== 0) return '';\n    let inputStr = value || value === 0 ? String(value) : '';\n    if (!inputRef.value?.inputRef?.contains(document.activeElement)) {\n      const num = formatToNumber(inputStr, {\n        decimalPlaces: props.decimalPlaces,\n        largeNumber: props.largeNumber,\n      });\n      inputStr = num || num === 0 ? String(num) : '';\n      if (props.format) {\n        inputStr = String(props.format(value, { fixedNumber: inputStr }));\n      }\n    }\n    return inputStr;\n  };\n\n  watch(\n    tValue,\n    (val) => {\n      const inputValue = [undefined, null].includes(val) ? '' : String(val);\n      userInput.value = getUserInput(inputValue);\n    },\n    { immediate: true },\n  );\n\n  onMounted(() => {\n    userInput.value = getUserInput(tValue.value);\n  });\n\n  watch(\n    [tValue, max, min],\n    () => {\n      // @ts-ignore 没有输入完成，则无需校验\n      if ([undefined, '', null].includes(tValue.value)) return;\n      const error = getMaxOrMinValidateResult({\n        value: tValue.value,\n        largeNumber: props.largeNumber,\n        max: props.max,\n        min: props.min,\n      });\n      isError.value = error;\n      props.onValidate?.({ error });\n    },\n    { immediate: true },\n  );\n\n  const handleStepValue = (op: 'add' | 'reduce') =>\n    getStepValue({\n      op,\n      step: props.step,\n      max: props.max,\n      min: props.min,\n      lastValue: tValue.value,\n      largeNumber: props.largeNumber,\n    });\n\n  const handleReduce = (e: KeyboardEvent | MouseEvent) => {\n    if (disabledReduce.value || props.readonly) return;\n    const newValue = handleStepValue('reduce');\n    setTValue(newValue, { type: 'reduce', e });\n  };\n\n  const handleAdd = (e: KeyboardEvent | MouseEvent) => {\n    if (disabledAdd.value || props.readonly) return;\n    const newValue = handleStepValue('add');\n    setTValue(newValue, { type: 'add', e });\n  };\n\n  const onInnerInputChange = (val: string, ctx: { e: InputEvent }) => {\n    if (!canInputNumber(val, props.largeNumber)) return;\n    userInput.value = val;\n    // 大数-字符串；普通数-数字。此处是了将 2e3，2.1e3 等内容转换为数字\n    const newVal = props.largeNumber || !val ? val : Number(val);\n    if (newVal !== tValue.value && !['-', '.', 'e', 'E'].includes(val.slice(-1))) {\n      setTValue(newVal, { type: 'input', e: ctx.e });\n    }\n  };\n\n  const handleBlur = (value: string, ctx: { e: FocusEvent }) => {\n    userInput.value = getUserInput(tValue.value);\n    const newValue = formatToNumber(value, {\n      decimalPlaces: props.decimalPlaces,\n      largeNumber: props.largeNumber,\n    });\n    if (newValue !== value && String(newValue) !== value) {\n      setTValue(newValue, { type: 'blur', e: ctx.e });\n    }\n    props.onBlur?.(newValue, ctx);\n  };\n\n  const handleFocus = (value: string, ctx: { e: FocusEvent }) => {\n    userInput.value = tValue.value || tValue.value === 0 ? String(tValue.value) : '';\n    props.onFocus?.(value, ctx);\n  };\n\n  const handleKeydown = (value: string, ctx: { e: KeyboardEvent }) => {\n    const { e } = ctx;\n    const keyEvent = {\n      ArrowUp: handleAdd,\n      ArrowDown: handleReduce,\n    };\n    const code = e.code || e.key;\n    if (keyEvent[code] !== undefined) {\n      keyEvent[code](e);\n    }\n    props.onKeydown?.(value, ctx);\n  };\n\n  const handleKeyup = (value: string, ctx: { e: KeyboardEvent }) => {\n    props.onKeyup?.(value, ctx);\n  };\n\n  const handleKeypress = (value: string, ctx: { e: KeyboardEvent }) => {\n    props.onKeypress?.(value, ctx);\n  };\n\n  const handleEnter = (value: string, ctx: { e: KeyboardEvent }) => {\n    userInput.value = getUserInput(value);\n    const newValue = formatToNumber(value, {\n      decimalPlaces: props.decimalPlaces,\n      largeNumber: props.largeNumber,\n    });\n    if (newValue !== value && String(newValue) !== value) {\n      setTValue(newValue, { type: 'enter', e: ctx.e });\n    }\n    props.onEnter?.(newValue, ctx);\n  };\n\n  const focus = () => {\n    (inputRef.value as any).focus();\n  };\n\n  const blur = () => {\n    (inputRef.value as any).blur();\n  };\n\n  const listeners = {\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    onKeydown: handleKeydown,\n    onKeyup: handleKeyup,\n    onKeypress: handleKeypress,\n    onEnter: handleEnter,\n    onClick: focus,\n  };\n\n  return {\n    classPrefix,\n    wrapClasses,\n    reduceClasses,\n    addClasses,\n    displayValue,\n    tDisabled,\n    isError,\n    listeners,\n    userInput,\n    tValue,\n    inputRef,\n    focus,\n    blur,\n    handleReduce,\n    handleAdd,\n    onInnerInputChange,\n  };\n}\n"],"names":["useInputNumber","props","useCommonClassName","classPrefix","sizeClassNames","statusClassNames","toRefs","value","modelValue","max","min","useVModel","defaultValue","onChange","tValue","setTValue","inputRef","ref","userInput","displayValue","tDisabled","useFormDisabled","isError","disabledReduce","computed","canReduceNumber","largeNumber","disabledAdd","canAddNumber","wrapClasses","size","disabled","theme","autoWidth","reduceClasses","addClasses","getUserInput","inputStr","String","contains","document","activeElement","num","formatToNumber","decimalPlaces","format","fixedNumber","watch","val","inputValue","includes","immediate","onMounted","error","getMaxOrMinValidateResult","onValidate","handleStepValue","op","getStepValue","step","lastValue","handleReduce","e","readonly","newValue","type","handleAdd","onInnerInputChange","ctx","canInputNumber","newVal","Number","slice","handleBlur","onBlur","handleFocus","onFocus","handleKeydown","keyEvent","ArrowUp","ArrowDown","code","key","onKeydown","handleKeyup","onKeyup","handleKeypress","onKeypress","handleEnter","onEnter","focus","blur","listeners","onClick"],"mappings":"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"}