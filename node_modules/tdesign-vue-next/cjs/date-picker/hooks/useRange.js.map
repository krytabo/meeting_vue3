{"version":3,"file":"useRange.js","sources":["../../../src/date-picker/hooks/useRange.tsx"],"sourcesContent":["import { ref, computed, watchEffect } from 'vue';\nimport { CalendarIcon as TdCalendarIcon } from 'tdesign-icons-vue-next';\nimport dayjs from 'dayjs';\n\nimport { useTNodeJSX } from '../../hooks/tnode';\nimport { useGlobalIcon } from '../../hooks/useGlobalIcon';\nimport { usePrefixClass, useConfig } from '../../hooks/useConfig';\n\nimport { TdDateRangePickerProps, DateValue } from '../type';\nimport { isValidDate, formatDate, getDefaultFormat, parseToDayjs } from '../../_common/js/date-picker/format';\nimport useRangeValue from './useRangeValue';\n\nexport const PARTIAL_MAP = { first: 'start', second: 'end' };\n\nexport default function useRange(props: TdDateRangePickerProps) {\n  const COMPONENT_NAME = usePrefixClass('date-range-picker');\n  const { globalConfig } = useConfig('datePicker');\n  const { CalendarIcon } = useGlobalIcon({ CalendarIcon: TdCalendarIcon });\n  const renderTNodeJSX = useTNodeJSX();\n\n  const isMountedRef = ref(false);\n  const inputRef = ref();\n\n  const { value, onChange, time, month, year, cacheValue, isFirstValueSelected } = useRangeValue(props);\n\n  const formatRef = computed(() =>\n    getDefaultFormat({\n      mode: props.mode,\n      format: props.format,\n      valueType: props.valueType,\n      enableTimePicker: props.enableTimePicker,\n    }),\n  );\n\n  const popupVisible = ref(false);\n  const isHoverCell = ref(false);\n  const activeIndex = ref(0); // 确定当前选中的输入框序号\n  const inputValue = ref(formatDate(props.value, { format: formatRef.value.format })); // 未真正选中前可能不断变更输入框的内容\n\n  // input 设置\n  const rangeInputProps = computed(() => ({\n    ...props.rangeInputProps,\n    ref: inputRef,\n    clearable: props.clearable,\n    prefixIcon: () => renderTNodeJSX('prefixIcon'),\n    readonly: !props.allowInput,\n    separator: props.separator,\n    placeholder: props.placeholder || globalConfig.value.placeholder[props.mode],\n    activeIndex: popupVisible.value ? activeIndex.value : undefined,\n    suffixIcon: () => {\n      return renderTNodeJSX('suffixIcon') || <CalendarIcon />;\n    },\n    class: {\n      [`${COMPONENT_NAME.value}__input--placeholder`]: isHoverCell.value,\n    },\n    onClick: ({ position }: any) => {\n      activeIndex.value = position === 'first' ? 0 : 1;\n    },\n    onClear: ({ e }: { e: MouseEvent }) => {\n      e.stopPropagation();\n      popupVisible.value = false;\n      onChange?.([], { dayjsValue: [], trigger: 'clear' });\n    },\n    onBlur: (newVal: string[], { e, position }: any) => {\n      props.onBlur?.({ value: newVal, partial: PARTIAL_MAP[position], e });\n    },\n    onFocus: (newVal: string[], { e, position }: any) => {\n      props.onFocus?.({ value: newVal, partial: PARTIAL_MAP[position], e });\n      activeIndex.value = position === 'first' ? 0 : 1;\n    },\n    onChange: (newVal: string[], { e, position }: any) => {\n      inputValue.value = newVal;\n\n      // 跳过不符合格式化的输入框内容\n      if (!isValidDate(newVal, formatRef.value.format)) return;\n      const newYear: Array<number> = [];\n      const newMonth: Array<number> = [];\n      const newTime: Array<string> = [];\n      newVal.forEach((v, i) => {\n        newYear.push(dayjs(v).year() || year.value[i]);\n        newMonth.push(dayjs(v).month() || month.value[i]);\n        newTime.push(dayjs(v).format(formatRef.value.timeFormat) || time.value[i]);\n      });\n      year.value = newYear;\n      month.value = newMonth;\n      time.value = newTime;\n    },\n    onEnter: (newVal: string[]) => {\n      if (!isValidDate(newVal, formatRef.value.format) && !isValidDate(value.value, formatRef.value.format)) return;\n\n      popupVisible.value = false;\n      if (isValidDate(newVal, formatRef.value.format)) {\n        onChange?.(\n          formatDate(newVal, {\n            format: formatRef.value.format,\n            targetFormat: formatRef.value.valueType,\n            autoSwap: true,\n          }) as DateValue[],\n          {\n            dayjsValue: newVal.map((v) => parseToDayjs(v, formatRef.value.format)),\n            trigger: 'enter',\n          },\n        );\n      } else if (isValidDate(value.value, formatRef.value.format)) {\n        inputValue.value = formatDate(value.value, {\n          format: formatRef.value.format,\n        });\n      } else {\n        inputValue.value = [];\n      }\n    },\n  }));\n\n  // popup 设置\n  const popupProps = computed(() => ({\n    expandAnimation: true,\n    ...props.popupProps,\n    overlayInnerStyle: props.popupProps?.overlayInnerStyle ?? { width: 'auto' },\n    overlayClassName: [props.popupProps?.overlayClassName, `${COMPONENT_NAME.value}__panel-container`],\n    onVisibleChange: (visible: boolean, context: any) => {\n      // 输入框点击不关闭面板\n      if (context.trigger === 'trigger-element-click') {\n        const indexMap = { 0: 'first', 1: 'second' };\n        inputRef.value.focus({ position: indexMap[activeIndex.value] });\n        popupVisible.value = true;\n        return;\n      }\n\n      popupVisible.value = visible;\n    },\n  }));\n\n  // 输入框响应 value 变化\n  watchEffect(() => {\n    if (!value.value) {\n      inputValue.value = [];\n      return;\n    }\n    if (!isValidDate(value.value, formatRef.value.format)) return;\n\n    inputValue.value = formatDate(value.value, {\n      format: formatRef.value.format,\n    });\n  });\n\n  // activeIndex 变化自动 focus 对应输入框\n  watchEffect(() => {\n    if (!isMountedRef.value) {\n      isMountedRef.value = true;\n      return;\n    }\n    const indexMap = { 0: 'first', 1: 'second' };\n    inputRef.value.focus({ position: indexMap[activeIndex.value] });\n  });\n\n  return {\n    year,\n    month,\n    value,\n    time,\n    inputValue,\n    popupVisible,\n    rangeInputProps,\n    popupProps,\n    isHoverCell,\n    activeIndex,\n    isFirstValueSelected,\n    cacheValue,\n    onChange,\n  };\n}\n"],"names":["PARTIAL_MAP","first","second","useRange","props","COMPONENT_NAME","usePrefixClass","useConfig","globalConfig","useGlobalIcon","CalendarIcon","TdCalendarIcon","renderTNodeJSX","useTNodeJSX","isMountedRef","ref","inputRef","useRangeValue","value","onChange","time","month","year","cacheValue","isFirstValueSelected","formatRef","computed","getDefaultFormat","mode","format","valueType","enableTimePicker","popupVisible","isHoverCell","activeIndex","inputValue","formatDate","rangeInputProps","clearable","prefixIcon","readonly","allowInput","separator","placeholder","suffixIcon","_createVNode","_defineProperty","onClick","position","onClear","e","stopPropagation","dayjsValue","trigger","onBlur","newVal","partial","onFocus","isValidDate","newYear","newMonth","newTime","forEach","v","i","push","dayjs","timeFormat","onEnter","targetFormat","autoSwap","map","parseToDayjs","popupProps","expandAnimation","overlayInnerStyle","width","overlayClassName","onVisibleChange","visible","context","indexMap","focus","watchEffect"],"mappings":"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"}