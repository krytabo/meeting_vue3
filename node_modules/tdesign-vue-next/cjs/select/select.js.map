{"version":3,"file":"select.js","sources":["../../src/select/select.tsx"],"sourcesContent":["import { defineComponent, provide, computed, toRefs, watch, ref, nextTick } from 'vue';\nimport picker from 'lodash/pick';\nimport isArray from 'lodash/isArray';\nimport isFunction from 'lodash/isFunction';\nimport debounce from 'lodash/debounce';\nimport cloneDeep from 'lodash/cloneDeep';\nimport get from 'lodash/get';\nimport intersection from 'lodash/intersection';\n\nimport FakeArrow from '../common-components/fake-arrow';\nimport SelectInput from '../select-input';\nimport SelectPanel from './select-panel';\n\nimport props from './props';\nimport { TdSelectProps, SelectValue } from './type';\nimport { PopupVisibleChangeContext } from '../popup';\n\n// hooks\nimport { useFormDisabled } from '../form/hooks';\nimport useDefaultValue from '../hooks/useDefaultValue';\nimport useVModel from '../hooks/useVModel';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport { useConfig, usePrefixClass } from '../hooks/useConfig';\nimport { selectInjectKey, getSingleContent, getMultipleContent, getNewMultipleValue } from './helper';\nimport { useSelectOptions } from './hooks/useSelectOptions';\n\nexport default defineComponent({\n  name: 'TSelect',\n  props: { ...props },\n  setup(props: TdSelectProps, { slots, expose, ...res }) {\n    const classPrefix = usePrefixClass();\n    const disabled = useFormDisabled();\n    const renderTNodeJSX = useTNodeJSX();\n    const COMPONENT_NAME = usePrefixClass('select');\n    const { globalConfig, t } = useConfig('select');\n    const { popupVisible, inputValue, modelValue, value } = toRefs(props);\n    const [orgValue, setOrgValue] = useVModel(value, modelValue, props.defaultValue, props.onChange);\n    const selectPanelRef = ref(null);\n    const selectInputRef = ref(null);\n    const keys = computed(() => ({\n      label: props.keys?.label || 'label',\n      value: props.keys?.value || 'value',\n    }));\n    const { options, optionsMap, optionsList } = useSelectOptions(props, keys);\n\n    // 内部数据,格式化过的\n    const innerValue = computed(() => {\n      if (props.valueType === 'object') {\n        return !props.multiple\n          ? orgValue.value[keys.value.value]\n          : (orgValue.value as SelectValue[]).map((option) => option[keys.value.value]);\n      }\n      return orgValue.value;\n    });\n    const setInnerValue: TdSelectProps['onChange'] = (newVal: SelectValue | SelectValue[], e) => {\n      if (props.valueType === 'object') {\n        const { value, label } = keys.value;\n        const getOption = (val: SelectValue) => {\n          const option = optionsMap.value.get(val);\n          return {\n            [value]: get(option, value),\n            [label]: get(option, label),\n          };\n        };\n        newVal = props.multiple ? (newVal as SelectValue[]).map((val) => getOption(val)) : getOption(newVal);\n      }\n      if (newVal === orgValue.value) return;\n      setOrgValue(newVal, { selectedOptions: getSelectedOptions(newVal), trigger: e.trigger, e: e.e });\n    };\n\n    const [innerInputValue, setInputValue] = useDefaultValue(\n      inputValue,\n      props.defaultInputValue,\n      props.onInputChange,\n      'inputValue',\n    );\n    const [innerPopupVisible, setInnerPopupVisible] = useDefaultValue(\n      popupVisible,\n      false,\n      (visible: boolean, context: PopupVisibleChangeContext) => {\n        props.onPopupVisibleChange?.(visible, context);\n        props.onVisibleChange?.(visible);\n      },\n      'popupVisible',\n    );\n\n    const placeholderText = computed(\n      () =>\n        ((!props.multiple && innerPopupVisible.value && getSingleContent(innerValue.value, optionsList.value)) ||\n          props.placeholder) ??\n        t(globalConfig.value.placeholder),\n    );\n\n    // selectInput 展示值\n    const displayText = computed(() =>\n      props.multiple\n        ? getMultipleContent(innerValue.value as SelectValue[], optionsList.value)\n        : getSingleContent(innerValue.value, optionsList.value),\n    );\n\n    // valueDisplayParams参数\n    const valueDisplayParams = computed(() => {\n      return props.multiple && isArray(innerValue.value)\n        ? (innerValue.value as SelectValue[]).map((value) => ({\n            value,\n            label: optionsMap.value.get(value)?.label,\n          }))\n        : innerValue.value;\n    });\n\n    const isFilterable = computed(() => {\n      return Boolean(props.filterable || globalConfig.value.filterable || isFunction(props.filter));\n    });\n\n    // 移除tag\n    const removeTag = (index: number, e?: MouseEvent) => {\n      e && e.stopPropagation();\n      const selectValue = cloneDeep(innerValue.value) as SelectValue[];\n      const value = selectValue[index];\n      selectValue.splice(index, 1);\n      setInnerValue(selectValue, { selectedOptions: getSelectedOptions(selectValue), trigger: 'tag-remove', e });\n      props.onRemove?.({\n        value: value as string | number,\n        data: optionsMap.value.get(value),\n        e,\n      });\n    };\n\n    const handleCreate = () => {\n      if (!innerInputValue.value) return;\n      props.onCreate?.(innerInputValue.value);\n      setInputValue('');\n    };\n\n    // 键盘操作逻辑\n    const hoverIndex = ref(-1);\n    const handleKeyDown = (e: KeyboardEvent) => {\n      const optionsListLength = optionsList.value.length;\n      let newIndex = hoverIndex.value;\n      switch (e.code) {\n        case 'ArrowUp':\n          e.preventDefault();\n          if (hoverIndex.value === -1) {\n            newIndex = 0;\n          } else if (hoverIndex.value === 0) {\n            newIndex = optionsListLength - 1;\n          } else {\n            newIndex--;\n          }\n          if (optionsList.value[newIndex]?.disabled) {\n            newIndex--;\n          }\n          hoverIndex.value = newIndex;\n          break;\n        case 'ArrowDown':\n          e.preventDefault();\n          if (hoverIndex.value === -1 || hoverIndex.value === optionsListLength - 1) {\n            newIndex = 0;\n          } else {\n            newIndex++;\n          }\n          if (optionsList.value[newIndex]?.disabled) {\n            newIndex++;\n          }\n          hoverIndex.value = newIndex;\n          break;\n        case 'Enter':\n          if (hoverIndex.value === -1) break;\n          if (!innerPopupVisible.value) {\n            setInnerPopupVisible(true, { e });\n            break;\n          }\n          if (!props.multiple) {\n            setInnerValue(optionsList.value[hoverIndex.value].value, {\n              selectedOptions: getSelectedOptions(optionsList.value[hoverIndex.value].value),\n              trigger: 'check',\n              e,\n            });\n            setInnerPopupVisible(false, { e });\n          } else {\n            if (hoverIndex.value === -1) return;\n            const optionValue = optionsList.value[hoverIndex.value]?.value;\n            if (!optionValue) return;\n            const newValue = getNewMultipleValue(innerValue.value, optionValue);\n            setInnerValue(newValue.value, {\n              selectedOptions: getSelectedOptions(newValue.value),\n              trigger: newValue.isCheck ? 'check' : 'uncheck',\n              e,\n            });\n          }\n          break;\n        case 'Escape':\n          setInnerPopupVisible(false, { e });\n          break;\n      }\n    };\n\n    const popupContentRef = computed(() => selectInputRef.value?.selectInputRef.getOverlay() as HTMLElement);\n\n    /**\n     * 可选选项的列表\n     * 排除已禁用和全选的选项\n     */\n    const optionalList = computed(() =>\n      optionsList.value.filter((item) => {\n        return !item.disabled && !item['check-all'] && !item.checkAll;\n      }),\n    );\n\n    const getSelectedOptions = (selectValue: SelectValue[] | SelectValue = innerValue.value) => {\n      return optionsList.value.filter((option) => {\n        if (option.checkAll) return;\n        if (Array.isArray(selectValue)) return selectValue.includes(option.value);\n        return selectValue === option.value;\n      });\n    };\n\n    const onCheckAllChange = (checked: boolean) => {\n      if (!props.multiple) return;\n      const value = checked ? optionalList.value.map((option) => option.value) : [];\n      setInnerValue(value, { selectedOptions: getSelectedOptions(value), trigger: checked ? 'check' : 'clear' });\n    };\n\n    // 已选的长度\n    const intersectionLen = computed<number>(() => {\n      const values = optionalList.value.map((item) => item.value);\n      const n = intersection(innerValue.value, values);\n      return n.length;\n    });\n\n    // 全选\n    const isCheckAll = computed<boolean>(() => {\n      return intersectionLen.value === optionalList.value.length;\n    });\n\n    // 半选\n    const indeterminate = computed<boolean>(() => !isCheckAll.value && intersectionLen.value !== 0);\n\n    const SelectProvide = computed(() => ({\n      max: props.max,\n      multiple: props.multiple,\n      hoverIndex: hoverIndex.value,\n      selectValue: innerValue.value,\n      reserveKeyword: props.reserveKeyword,\n      handleValueChange: setInnerValue,\n      handlerInputChange: setInputValue,\n      handlePopupVisibleChange: setInnerPopupVisible,\n      handleCreate,\n      size: props.size,\n      popupContentRef,\n      indeterminate: indeterminate.value,\n      isCheckAll: isCheckAll.value,\n      onCheckAllChange,\n      getSelectedOptions,\n    }));\n\n    provide(selectInjectKey, SelectProvide);\n\n    const checkValueInvalid = () => {\n      // 参数类型检测与修复\n      if (!props.multiple && isArray(orgValue.value)) {\n        setOrgValue(undefined);\n      }\n      if (props.multiple && !isArray(orgValue.value)) {\n        setOrgValue([]);\n      }\n    };\n    const handleSearch = debounce((value: string) => {\n      props.onSearch?.(`${value}`);\n    }, 300);\n\n    watch(\n      orgValue,\n      () => {\n        checkValueInvalid();\n      },\n      {\n        immediate: true,\n      },\n    );\n    watch(\n      () => props.multiple,\n      () => {\n        checkValueInvalid();\n      },\n    );\n    watch(innerPopupVisible, (value) => {\n      if (value) {\n        // 显示\n        hoverIndex.value = -1;\n      } else {\n        // 隐藏\n        // eslint-disable-next-line no-lonely-if\n        if (innerInputValue.value) {\n          setInputValue('');\n        }\n      }\n    });\n\n    // 列表展开时定位置选中项\n    const updateScrollTop = (content: HTMLDivElement) => {\n      if (!selectPanelRef.value) {\n        return;\n      }\n      const firstSelectedNode: HTMLDivElement = (selectPanelRef.value?.innerRef as HTMLDivElement)?.querySelector(\n        `.${classPrefix.value}-is-selected`,\n      );\n      // 此处需要等待渲染后进行计算\n      nextTick(() => {\n        if (firstSelectedNode && content) {\n          const { paddingBottom } = getComputedStyle(firstSelectedNode);\n          const { marginBottom } = getComputedStyle(content);\n          const elementBottomHeight = parseInt(paddingBottom, 10) + parseInt(marginBottom, 10);\n          // 小于0时不需要特殊处理，会被设为0\n          const updateValue =\n            firstSelectedNode.offsetTop -\n            content.offsetTop -\n            (content.clientHeight - firstSelectedNode.clientHeight) +\n            elementBottomHeight;\n          // eslint-disable-next-line no-param-reassign\n          content.scrollTop = updateValue;\n        }\n      });\n    };\n    provide('updateScrollTop', updateScrollTop);\n\n    return () => {\n      const { overlayClassName, ...restPopupProps } = (props.popupProps || {}) as TdSelectProps['popupProps'];\n      return (\n        <div class={`${COMPONENT_NAME.value}__wrap`}>\n          <SelectInput\n            {...{\n              autoWidth: props.autoWidth,\n              readonly: props.readonly,\n              borderless: props.borderless || !props.bordered,\n              multiple: props.multiple,\n              clearable: props.clearable,\n              loading: props.loading,\n              status: props.status,\n              tips: props.tips,\n              minCollapsedNum: props.minCollapsedNum,\n            }}\n            ref={selectInputRef}\n            class={COMPONENT_NAME.value}\n            value={displayText.value}\n            disabled={disabled.value}\n            popupVisible={innerPopupVisible.value}\n            inputValue={innerPopupVisible.value ? innerInputValue.value : ''}\n            placeholder={`${placeholderText.value}`}\n            allowInput={isFilterable.value}\n            collapsed-items={props.collapsedItems}\n            inputProps={{\n              size: props.size,\n              ...(props.inputProps as TdSelectProps['inputProps']),\n              onkeydown: handleKeyDown,\n            }}\n            tagInputProps={{\n              size: props.size,\n              ...(props.tagInputProps as TdSelectProps['tagInputProps']),\n            }}\n            onTagChange={(val, ctx) => {\n              removeTag(ctx.index);\n            }}\n            tagProps={{ ...(props.tagProps as TdSelectProps['tagProps']) }}\n            popupProps={{\n              overlayClassName: [`${COMPONENT_NAME.value}__dropdown`, overlayClassName],\n              ...restPopupProps,\n            }}\n            label={() => renderTNodeJSX('prefixIcon')}\n            suffixIcon={() =>\n              props.showArrow && (\n                <FakeArrow\n                  overlayClassName={`${COMPONENT_NAME.value}__right-icon`}\n                  isActive={innerPopupVisible.value}\n                />\n              )\n            }\n            valueDisplay={() =>\n              renderTNodeJSX('valueDisplay', {\n                params: { value: valueDisplayParams.value, onClose: (index: number) => removeTag(index) },\n              })\n            }\n            onPopupVisibleChange={(val: boolean, context) => {\n              setInnerPopupVisible(val, context);\n            }}\n            onInputChange={(value) => {\n              if (!innerPopupVisible.value) return;\n              setInputValue(value);\n              handleSearch(`${value}`);\n            }}\n            onClear={({ e }) => {\n              setInnerValue(props.multiple ? [] : undefined, {\n                selectedOptions: getSelectedOptions(props.multiple ? [] : undefined),\n                trigger: 'clear',\n                e,\n              });\n              props.onClear?.({ e });\n            }}\n            onEnter={(inputValue, { e }) => {\n              props.onEnter?.({ inputValue: `${innerInputValue.value}`, e, value: innerValue.value });\n              handleCreate();\n            }}\n            onBlur={(inputValue, { e }) => {\n              props.onBlur?.({ e, value: innerValue.value });\n            }}\n            onFocus={(inputValue, { e }) => {\n              props.onFocus?.({ e, value: innerValue.value });\n            }}\n            {...(props.selectInputProps as TdSelectProps['selectInputProps'])}\n            v-slots={{\n              panel: () => (\n                <SelectPanel\n                  ref={selectPanelRef}\n                  {...picker(props, [\n                    'size',\n                    'multiple',\n                    'empty',\n                    'loading',\n                    'loadingText',\n                    'filterable',\n                    'creatable',\n                    'panelTopContent',\n                    'panelBottomContent',\n                    'filter',\n                    'scroll',\n                  ])}\n                  options={options.value}\n                  inputValue={innerInputValue.value}\n                  v-slots={slots}\n                />\n              ),\n              collapsedItems: slots.collapsedItems,\n            }}\n          />\n        </div>\n      );\n    };\n  },\n});\n"],"names":["defineComponent","name","props","setup","slots","expose","classPrefix","usePrefixClass","disabled","useFormDisabled","renderTNodeJSX","useTNodeJSX","COMPONENT_NAME","useConfig","globalConfig","t","toRefs","popupVisible","inputValue","modelValue","value","useVModel","defaultValue","onChange","_slicedToArray","orgValue","setOrgValue","selectPanelRef","ref","selectInputRef","keys","computed","label","useSelectOptions","options","optionsMap","optionsList","innerValue","valueType","multiple","map","option","setInnerValue","newVal","e","getOption","val","get","_defineProperty","selectedOptions","getSelectedOptions","trigger","useDefaultValue","defaultInputValue","onInputChange","innerInputValue","setInputValue","visible","context","onPopupVisibleChange","onVisibleChange","innerPopupVisible","setInnerPopupVisible","placeholderText","getSingleContent","placeholder","displayText","getMultipleContent","valueDisplayParams","isArray","isFilterable","Boolean","filterable","isFunction","filter","removeTag","index","stopPropagation","selectValue","cloneDeep","splice","onRemove","data","handleCreate","onCreate","hoverIndex","handleKeyDown","optionsListLength","length","newIndex","code","preventDefault","optionValue","newValue","getNewMultipleValue","isCheck","popupContentRef","getOverlay","optionalList","item","checkAll","Array","includes","onCheckAllChange","checked","intersectionLen","values","n","intersection","isCheckAll","indeterminate","SelectProvide","max","reserveKeyword","handleValueChange","handlerInputChange","handlePopupVisibleChange","size","provide","selectInjectKey","checkValueInvalid","handleSearch","debounce","onSearch","watch","immediate","updateScrollTop","content","firstSelectedNode","innerRef","querySelector","nextTick","getComputedStyle","paddingBottom","marginBottom","elementBottomHeight","parseInt","updateValue","offsetTop","clientHeight","scrollTop","popupProps","overlayClassName","restPopupProps","_objectWithoutProperties","_createVNode","SelectInput","_mergeProps","autoWidth","readonly","borderless","bordered","clearable","loading","status","tips","minCollapsedNum","collapsedItems","inputProps","onkeydown","tagInputProps","ctx","tagProps","showArrow","FakeArrow","params","onClose","onClear","onEnter","onBlur","onFocus","selectInputProps","panel","SelectPanel","picker"],"mappings":"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"}