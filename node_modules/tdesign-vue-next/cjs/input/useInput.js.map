{"version":3,"file":"useInput.js","sources":["../../src/input/useInput.ts"],"sourcesContent":["import { ref, computed, watch, nextTick, toRefs, inject, onBeforeMount } from 'vue';\nimport { getCharacterLength } from '../utils/helper';\nimport { InputValue } from './type';\nimport { ExtendsTdInputProps } from './input';\nimport { FormItemInjectionKey } from '../form/const';\n\nimport useVModel from '../hooks/useVModel';\nimport { useFormDisabled } from '../form/hooks';\n\nexport default function useInput(props: ExtendsTdInputProps, expose: (exposed: Record<string, any>) => void) {\n  const { value, modelValue } = toRefs(props);\n  const inputValue = ref<InputValue>();\n  const clearIconRef = ref(null);\n  const innerClickElement = ref();\n  const disabled = useFormDisabled();\n  const [innerValue, setInnerValue] = useVModel(value, modelValue, props.defaultValue, props.onChange);\n\n  const isHover = ref(false);\n  const focused = ref(false);\n  const renderType = ref(props.type);\n  const inputRef = ref<HTMLInputElement>(null);\n  const inputPreRef = ref(null);\n  // 字数限制统计\n  const limitNumber = ref('');\n\n  const innerStatus = computed(() => {\n    if (limitNumber.value) {\n      const [current, total] = limitNumber.value.split('/');\n      return Number(current) > Number(total) ? 'error' : '';\n    }\n    return '';\n  });\n\n  const tStatus = computed(() => {\n    if (props.status) return props.status;\n    return innerStatus.value;\n  });\n\n  const showClear = computed(() => {\n    return (\n      ((innerValue.value && !disabled.value && props.clearable && !props.readonly) || props.showClearIconOnEmpty) &&\n      isHover.value\n    );\n  });\n\n  const focus = () => inputRef.value?.focus();\n  const blur = () => inputRef.value?.blur();\n\n  const emitFocus = (e: FocusEvent) => {\n    inputValue.value = innerValue.value;\n    if (props.disabled || props.readonly) return;\n    focused.value = true;\n    props.onFocus?.(innerValue.value, { e });\n  };\n\n  const emitClear = ({ e }: { e: MouseEvent }) => {\n    props.onClear?.({ e });\n    setInnerValue('', { e });\n  };\n\n  const onClearIconMousedown = (e: MouseEvent) => {\n    innerClickElement.value = e.target;\n  };\n\n  const emitPassword = () => {\n    const toggleType = renderType.value === 'password' ? 'text' : 'password';\n    renderType.value = toggleType;\n  };\n\n  const setInputElValue = (v: InputValue = '') => {\n    const inputEl = inputRef.value as HTMLInputElement;\n    if (!inputEl) return;\n    const sV = String(v);\n    if (!inputEl.value) {\n      return;\n    }\n    if (inputEl.value !== sV) {\n      inputEl.value = sV;\n    }\n  };\n  const inputValueChangeHandle = (e: InputEvent | CompositionEvent) => {\n    const { target } = e;\n    let val = (target as HTMLInputElement).value;\n    if (props.maxcharacter && props.maxcharacter > 0) {\n      const stringInfo = getCharacterLength(val, props.maxcharacter);\n      if (typeof stringInfo === 'object') {\n        if (!props.allowInputOverMax) {\n          val = stringInfo.characters;\n        }\n        limitNumber.value = `${stringInfo.length}/${props.maxcharacter}`;\n      }\n    }\n    if (props.maxlength && props.maxlength > 0) {\n      if (!props.allowInputOverMax) {\n        val = val.substring(0, props.maxlength);\n      }\n      limitNumber.value = `${val.length}/${props.maxlength}`;\n    }\n    setInnerValue(val, { e } as { e: InputEvent });\n    // 受控\n    nextTick(() => setInputElValue(innerValue.value));\n  };\n\n  const handleInput = (e: InputEvent) => {\n    const checkInputType = e.inputType && e.inputType === 'insertCompositionText';\n    if (e.isComposing || checkInputType) return;\n    inputValueChangeHandle(e);\n  };\n\n  const isClearIcon = () => {\n    let tmp = innerClickElement.value;\n    if (!tmp || !tmp.tagName || !clearIconRef.value?.$el || !['path', 'svg'].includes(tmp.tagName)) return false;\n    while (tmp) {\n      if (clearIconRef.value?.$el === tmp) {\n        return true;\n      }\n      tmp = tmp.parentNode;\n    }\n    return false;\n  };\n\n  const formItem = inject(FormItemInjectionKey, undefined);\n  const formatAndEmitBlur = (e: FocusEvent) => {\n    if (props.format) {\n      inputValue.value = props.format(innerValue.value);\n    }\n    focused.value = false;\n    // 点击清空按钮的时候，不应该触发 onBlur 事件。这个规则在表格单元格编辑中有很重要的应用\n    if (!isClearIcon() && props.allowTriggerBlur) {\n      props.onBlur?.(innerValue.value, { e });\n      formItem?.handleBlur();\n    }\n  };\n\n  const onHandleCompositionend = (e: CompositionEvent) => {\n    inputValueChangeHandle(e);\n    props.onCompositionend?.(innerValue.value, { e });\n  };\n  const onHandleCompositionstart = (e: CompositionEvent) => {\n    props.onCompositionstart?.(innerValue.value, { e });\n  };\n\n  const onRootClick = (e: MouseEvent) => {\n    inputRef.value?.focus();\n  };\n\n  watch(\n    () => props.autofocus,\n    (value) => {\n      if (value === true) {\n        nextTick(() => {\n          inputRef.value?.focus();\n        });\n      }\n    },\n    { immediate: true },\n  );\n\n  watch(\n    innerValue,\n    (v) => {\n      inputValue.value = v;\n    },\n    { immediate: true },\n  );\n\n  watch(\n    () => props.type,\n    (v) => {\n      renderType.value = v;\n    },\n    { immediate: true },\n  );\n\n  watch(innerStatus, () => {\n    props.onValidate?.({ error: innerStatus.value ? 'exceed-maximum' : undefined });\n  });\n\n  const updateLimitNumber = () => {\n    if (props.maxcharacter && props.maxcharacter > 0) {\n      const len = getCharacterLength(String(innerValue.value));\n      limitNumber.value = `${len}/${props.maxcharacter}`;\n    }\n    if (props.maxlength && props.maxlength > 0) {\n      const val = !innerValue.value ? '' : innerValue.value;\n      limitNumber.value = `${String(val).length}/${props.maxlength}`;\n    }\n  };\n\n  onBeforeMount(() => {\n    updateLimitNumber();\n  });\n\n  expose({\n    inputRef,\n    focus,\n    blur,\n  });\n\n  return {\n    isHover,\n    focused,\n    renderType,\n    showClear,\n    inputRef,\n    clearIconRef,\n    inputValue,\n    limitNumber,\n    tStatus,\n    emitFocus,\n    formatAndEmitBlur,\n    onHandleCompositionend,\n    onHandleCompositionstart,\n    onRootClick,\n    emitPassword,\n    handleInput,\n    emitClear,\n    onClearIconMousedown,\n    innerValue,\n    inputPreRef,\n  };\n}\n"],"names":["useInput","props","expose","toRefs","value","modelValue","inputValue","ref","clearIconRef","innerClickElement","disabled","useFormDisabled","useVModel","defaultValue","onChange","_slicedToArray","innerValue","setInnerValue","isHover","focused","renderType","type","inputRef","inputPreRef","limitNumber","innerStatus","computed","split","current","total","Number","tStatus","status","showClear","clearable","readonly","showClearIconOnEmpty","focus","blur","emitFocus","e","onFocus","emitClear","onClear","onClearIconMousedown","target","emitPassword","toggleType","setInputElValue","v","inputEl","sV","String","inputValueChangeHandle","val","maxcharacter","stringInfo","getCharacterLength","_typeof","allowInputOverMax","characters","length","maxlength","substring","nextTick","handleInput","checkInputType","inputType","isComposing","isClearIcon","tmp","tagName","$el","includes","parentNode","formItem","inject","FormItemInjectionKey","formatAndEmitBlur","format","allowTriggerBlur","onBlur","handleBlur","onHandleCompositionend","onCompositionend","onHandleCompositionstart","onCompositionstart","onRootClick","watch","autofocus","immediate","onValidate","error","updateLimitNumber","len","onBeforeMount"],"mappings":"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"}