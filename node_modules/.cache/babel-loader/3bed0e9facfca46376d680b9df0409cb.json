{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { reactive } from \"vue\";\nconst datePickerData = reactive({\n  defaultT: \"\",\n  dateTimeDbl: [],\n  // 多个默认时间展示\n  shortcuts: [],\n  // 默认时间的处理\n  shortcutsDbl: [] // 默认时间的处理\n});\n\nconst initEffect = props => {\n  const init = () => {\n    // 单个时间的数据展示\n    if (!props.isDoubleTime) {\n      datePickerData.defaultT = props.defaultTime;\n      const arr = [];\n      if (!props.shortcuts.length) {\n        datePickerData.shortcuts = arr;\n      } else {\n        props.shortcuts.forEach(e => {\n          arr.push({\n            text: `前${e}天`,\n            value: () => {\n              const date = new Date();\n              date.setTime(date.getTime() - 3600 * 1000 * 24 * e);\n              return date;\n            }\n          });\n        });\n        datePickerData.shortcuts = arr;\n      }\n    } else {\n      // 多个时间的快捷选择\n      const arr = [new Date(), new Date()];\n      if (!props.defaultTimeDbl.length) {\n        datePickerData.dateTimeDbl = [new Date(), new Date()];\n      }\n      if (!props.shortcutsDbl.length) {\n        datePickerData.shortcutsDbl = arr;\n      } else {\n        props.shortcutsDbl.forEach(e => {\n          arr.push({\n            text: `前${e}天`,\n            value: () => {\n              const end = new Date();\n              const start = new Date();\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * e);\n              return [start, end];\n            }\n          });\n        });\n        datePickerData.shortcutsDbl = arr;\n      }\n    }\n  };\n  return {\n    init\n  };\n};\nexport default {\n  props: {\n    value: {\n      default() {\n        return \"\";\n      },\n      type: String\n    },\n    // 是否是时间组合\n    isDoubleTime: {\n      default() {\n        return false;\n      },\n      type: Boolean\n    },\n    // 单个默认时间展示\n    defaultTime: {\n      default() {\n        return \"\";\n      },\n      type: String\n    },\n    // 多个默认时间展示\n    defaultTimeDbl: {\n      default() {\n        return [];\n      },\n      type: Array\n    },\n    // 时间类型  datetime  /   date   是否需要时分秒\n    timeType: {\n      default() {\n        return \"date\";\n      },\n      type: String\n    },\n    // 时间类型  datetime  /   date   是否需要时分秒\n    timeTypeDbl: {\n      default() {\n        return \"daterange\";\n      },\n      type: String\n    },\n    placeholder: {\n      default() {\n        return \"开始时间\";\n      },\n      type: String\n    },\n    // 快捷时间的展示 只用传天数  不用就传[]  空数组\n    shortcuts: {\n      default() {\n        return [];\n      },\n      type: Array\n    },\n    // 快捷时间的展示 只用传天数  不用就传[]  空数组\n    shortcutsDbl: {\n      default() {\n        return [];\n      },\n      type: Array\n    }\n  },\n  emits: [\"dataPickerChange\", \"input\"],\n  setup(props, ctx) {\n    const {\n      init\n    } = initEffect(props);\n    init();\n    const changeData = val => {\n      // const time = []\n      console.log(val);\n      ctx.emit(\"dataPickerChange\", val);\n    };\n    return {\n      datePickerData,\n      changeData\n    };\n  }\n};","map":{"version":3,"mappings":"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","names":["reactive","datePickerData","defaultT","dateTimeDbl","shortcuts","shortcutsDbl","initEffect","props","init","isDoubleTime","defaultTime","arr","length","forEach","e","push","text","value","date","Date","setTime","getTime","defaultTimeDbl","end","start","default","type","String","Boolean","Array","timeType","timeTypeDbl","placeholder","emits","setup","ctx","changeData","val","console","log","emit"],"sourceRoot":"","sources":["/Users/krystal/Vue/meeting_vue3/src/components/selectFilterHeader.vue"],"sourcesContent":["<template>\n  <el-date-picker\n    v-if=\"!isDoubleTime\"\n    :model-value=\"datePickerData.defaultT\"\n    :value-format=\"timeType == 'date' ? 'YYYY-MM-DD' : 'YYYY-MM-DD HH:mm:ss'\"\n    :type=\"timeType\"\n    :format=\"timeType == 'date' ? 'YYYY-MM-DD' : 'YYYY-MM-DD HH:mm:ss'\"\n    :placeholder=\"placeholder\"\n    :shortcuts=\"datePickerData.shortcuts\"\n    @change=\"changeData\"\n  ></el-date-picker>\n  <el-date-picker\n    v-else\n    :model-value=\"datePickerData.dateTimeDbl\"\n    :default-value=\"datePickerData.dateTimeDbl\"\n    :value-format=\"timeTypeDbl == 'daterange' ? 'YYYY-MM-DD' : 'YYYY-MM-DD HH:mm:ss'\"\n    :type=\"timeTypeDbl\"\n    range-separator=\"至\"\n    start-placeholder=\"開始\"\n    end-placeholder=\"結束\"\n    :shortcuts=\"datePickerData.shortcutsDbl\"\n    @change=\"changeData\"\n  ></el-date-picker>\n</template>\n<script>\nimport { reactive } from \"vue\";\nconst datePickerData = reactive({\n  defaultT: \"\",\n  dateTimeDbl: [], // 多个默认时间展示\n  shortcuts: [], // 默认时间的处理\n  shortcutsDbl: [], // 默认时间的处理\n});\n\nconst initEffect = (props) => {\n  const init = () => {\n    // 单个时间的数据展示\n    if (!props.isDoubleTime) {\n      datePickerData.defaultT = props.defaultTime;\n      const arr = [];\n      if (!props.shortcuts.length) {\n        datePickerData.shortcuts = arr;\n      } else {\n        props.shortcuts.forEach((e) => {\n          arr.push({\n            text: `前${e}天`,\n            value: () => {\n              const date = new Date();\n              date.setTime(date.getTime() - 3600 * 1000 * 24 * e);\n              return date;\n            },\n          });\n        });\n        datePickerData.shortcuts = arr;\n      }\n    } else {\n      // 多个时间的快捷选择\n      const arr = [new Date(), new Date()];\n      if (!props.defaultTimeDbl.length) {\n        datePickerData.dateTimeDbl = [new Date(), new Date()];\n      }\n      if (!props.shortcutsDbl.length) {\n        datePickerData.shortcutsDbl = arr;\n      } else {\n        props.shortcutsDbl.forEach((e) => {\n          arr.push({\n            text: `前${e}天`,\n            value: () => {\n              const end = new Date();\n              const start = new Date();\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * e);\n              return [start, end];\n            },\n          });\n        });\n        datePickerData.shortcutsDbl = arr;\n      }\n    }\n  };\n  return { init };\n};\nexport default {\n  props: {\n    value: {\n      default() {\n        return \"\";\n      },\n      type: String,\n    },\n    // 是否是时间组合\n    isDoubleTime: {\n      default() {\n        return false;\n      },\n      type: Boolean,\n    },\n    // 单个默认时间展示\n    defaultTime: {\n      default() {\n        return \"\";\n      },\n      type: String,\n    },\n    // 多个默认时间展示\n    defaultTimeDbl: {\n      default() {\n        return [];\n      },\n      type: Array,\n    },\n    // 时间类型  datetime  /   date   是否需要时分秒\n    timeType: {\n      default() {\n        return \"date\";\n      },\n      type: String,\n    },\n    // 时间类型  datetime  /   date   是否需要时分秒\n    timeTypeDbl: {\n      default() {\n        return \"daterange\";\n      },\n      type: String,\n    },\n    placeholder: {\n      default() {\n        return \"开始时间\";\n      },\n      type: String,\n    },\n    // 快捷时间的展示 只用传天数  不用就传[]  空数组\n    shortcuts: {\n      default() {\n        return [];\n      },\n      type: Array,\n    },\n    // 快捷时间的展示 只用传天数  不用就传[]  空数组\n    shortcutsDbl: {\n      default() {\n        return [];\n      },\n      type: Array,\n    },\n  },\n  emits: [\"dataPickerChange\", \"input\"],\n  setup(props, ctx) {\n    const { init } = initEffect(props);\n    init();\n    const changeData = (val) => {\n      // const time = []\n      console.log(val);\n      ctx.emit(\"dataPickerChange\", val);\n    };\n    return { datePickerData, changeData };\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}